<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vincent.user.mapper.UserMapper">


  <resultMap id="userMap" type="com.vincent.user.pojo.User">
    <id     property="userId"   column="user_id"/>
    <result property="userName" column="username"/>
    <result property="phone"    column="phone"/>
    <result property="password" column="password"/>
    <result property="role"     column="role"/>
    <result property="gender"   column="gender"/>
    <result property="idCard"   column="id_card"/>
    <result property="address"  column="address"/>
    <result property="imageUrl" column="image_url"/>
    <result property="createDate" column="create_date"/>
  </resultMap>


  <!--1、添加一个user-->
  <insert id="add" parameterType="com.vincent.user.pojo.User">
    insert into users (username, phone, password, role, gender, id_card, address, image_url, create_date)
    values (#{userName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
            #{role,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR},
            #{address,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, #{createDate,jdbcType=VARCHAR})
  </insert>




  <!--2、根据user_id删除一个用户-->
  <delete id="deleteByUserId" parameterType="com.vincent.user.pojo.User">
    delete from users
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>

  <!--3、查询所有用户-->
  <select id="selectAll" resultType="com.vincent.user.pojo.User">
    select * from users
  </select>

  <!--4、根据user_id更新用户名和密码-->

  <update id="updateByUserId" parameterType="com.vincent.user.pojo.User">
    UPDATE users
    SET
      username = #{userName},
      phone = #{phone},
      password = #{password},
      role = #{role},
      gender = #{gender},
      id_card = #{idCard},
      address = #{address},
      image_url = #{imageUrl}
    WHERE user_id = #{userId}
  </update>

  <!--5、根据user_id查询一个用户-->
  <select id="findUserByUserId" parameterType="java.lang.Integer" resultType="com.vincent.user.pojo.User">
    select * from users where user_id = #{userId,jdbcType=INTEGER}  LIMIT 1
  </select>

  <!--6、根据用户名和密码查询一个用户-->
  <select id="findUserByNAP" parameterType="com.vincent.user.pojo.User" resultType="com.vincent.user.pojo.User">
    select * from users
    where username = #{userName,jdbcType=VARCHAR}
      and password = #{password,jdbcType=VARCHAR}  LIMIT 1
  </select>

  <select id="findUserByPAP" parameterType="com.vincent.user.pojo.User" resultType="com.vincent.user.pojo.User">
    select * from users
    where phone = #{phone,jdbcType=VARCHAR}
      and password = #{password,jdbcType=VARCHAR}  LIMIT 1
  </select>



<!--  7. 批量删除-->
  <delete id="deleteBatch" parameterType="list">
    DELETE FROM users WHERE user_id IN
    <foreach collection="ids" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

<!--8. 根据姓名或者手机号进行模糊查询-->
  <select id="searchUsers" resultType="com.vincent.user.pojo.User">
    SELECT * FROM users
    <where>
      <if test="userName != null and userName != ''">
        AND username LIKE CONCAT('%', #{userName}, '%')
      </if>
      <if test="phone != null and phone != ''">
        AND phone LIKE CONCAT('%', #{phone}, '%')
      </if>
    </where>
  </select>

  <select id="selectByRole" resultMap="userMap">
    SELECT * FROM users WHERE role = #{role}
  </select>

  <!-- 9、修改密码 harmonyOS-->
  <update id="updatePassword" parameterType="map">
    UPDATE users
    SET password = #{newPwd}
    WHERE user_id = #{userId}
  </update>


</mapper>
