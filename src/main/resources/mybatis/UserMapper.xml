<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vincent.user.mapper.UserMapper" >



  <!--1、添加一个user-->
  <!--insert的结果，如果成功返回的是1(这个1是插入的条数)，失败返回的是exception，而不是0。-->
<!--  <insert id="add" parameterType="com.vincent.user.pojo.User">-->
<!--    insert into user (username, password,-->
<!--                        phone, gender, location)-->
<!--    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},-->
<!--            #{gender,jdbcType=VARCHAR},#{location,jdbcType=VARCHAR})-->
<!--  </insert>-->


  <!--2、根据id删除一个用户-->
<!--  <delete id="deleteByUserId" parameterType="com.vincent.user.pojo.User">-->
<!--    delete from user-->
<!--    where userid = #{userId,jdbcType=INTEGER}-->
<!--  </delete>-->


  <!--3、查询所有-->
<!--  <select id="selectAll" resultType="com.vincent.user.pojo.User">-->
<!--    select * from user-->
<!--  </select>-->


  <!--4、更新,参数是用户名和密码，根据id更新用户名和密码  返回结果为user-->
<!--  <update id="updateByUserId" parameterType="com.vincent.user.pojo.User">-->
<!--    update user set username=#{userName},password=#{password} where userid=#{userId}-->
<!--  </update>-->


  <!--5、根据id查-->
<!--  <select id="findUserByUserId" parameterType="java.lang.Integer" resultType="com.vincent.user.pojo.User">-->
<!--    select *  from user where userid=#{userId}-->
<!--  </select>-->


  <!--根据username和密码查询-->
<!--  <select id="findUserByNameAndPassword" parameterType="com.vincent.user.pojo.User" resultType="com.vincent.user.pojo.User">-->
<!--    select * from user where username = #{userName,jdbcType=VARCHAR} and password = #{password,jdbcType=VARCHAR}-->
<!--  </select>-->



  <!--这里时gaussDB-->
  <!--1、添加一个user-->
  <!--insert的结果，如果成功返回的是1(这个1是插入的条数)，失败返回的是exception，而不是0。-->

  <insert id="add" parameterType="com.vincent.user.pojo.User">
    insert into sys."user" ("userName", "password",
                      "phone", "gender", "location")
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},
            #{gender,jdbcType=VARCHAR},#{location,jdbcType=VARCHAR})
  </insert>


  <!--2、根据id删除一个用户-->
  <delete id="deleteByUserId" parameterType="com.vincent.user.pojo.User">
    delete from sys."user"
    where userid = #{"userId",jdbcType=INTEGER}
  </delete>


  <!--3、查询所有-->
  <select id="selectAll" resultType="com.vincent.user.pojo.User">
    select * from sys."user"
  </select>


  <!--4、更新,参数是用户名和密码，根据id更新用户名和密码  返回结果为user-->
  <update id="updateByUserId" parameterType="com.vincent.user.pojo.User">
    update sys."user" set "userName"=#{userName},"password"=#{password} where "userId"=#{userId}
  </update>


  <!--5、根据id查-->
  <select id="findUserByUserId" parameterType="java.lang.Integer" resultType="com.vincent.user.pojo.User">
    select *  from sys."user" where "userId"=#{userId}
  </select>


  <!--根据username和密码查询-->
  <select id="findUserByNameAndPassword" parameterType="com.vincent.user.pojo.User" resultType="com.vincent.user.pojo.User">
    select * from sys."user" where "userName" = #{userName,jdbcType=VARCHAR} and "password" = #{password,jdbcType=VARCHAR}
  </select>





</mapper>