<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vincent.user.mapper.UserMapper" >



  <!--1、添加一个user-->
  <!--insert的结果，如果成功返回的是1(这个1是插入的条数)，失败返回的是exception，而不是0。-->
  <insert id="add" parameterType="com.vincent.user.pojo.User">
    insert into users (username, password, role, gender, id_card, address, create_date)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR},
            #{gender,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
            #{createDate,jdbcType=VARCHAR})
  </insert>


  <!--2、根据id删除一个用户-->
  <delete id="deleteByUserId" parameterType="com.vincent.user.pojo.User">
    delete from users
    where userid = #{userId,jdbcType=INTEGER}
  </delete>


  <!--3、查询所有用户-->
  <select id="selectAll" resultType="com.vincent.user.pojo.User">
    select * from users
  </select>

  <!--4、根据id更新用户名和密码，返回更新后的用户-->
  <update id="updateByUserId" parameterType="com.vincent.user.pojo.User">
    update users
    set username = #{userName,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR}
    where userid = #{userId,jdbcType=INTEGER}
  </update>

  <!--5、根据id查询一个用户-->
  <select id="findUserByUserId" parameterType="java.lang.Integer" resultType="com.vincent.user.pojo.User">
    select * from users where userid = #{userId,jdbcType=INTEGER}
  </select>

  <!--6、根据用户名和密码查询一个用户-->
  <select id="findUserByNAP" parameterType="com.vincent.user.pojo.User" resultType="com.vincent.user.pojo.User">
    select * from users
    where username = #{userName,jdbcType=VARCHAR}
      and password = #{password,jdbcType=VARCHAR}
  </select>


</mapper>