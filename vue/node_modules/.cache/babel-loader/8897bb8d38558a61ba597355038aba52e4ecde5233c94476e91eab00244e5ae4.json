{"ast":null,"code":"import VChart from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport { LineChart } from 'echarts/charts';\nimport { TitleComponent, TooltipComponent, GridComponent, DatasetComponent, LegendComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\necharts.use([LineChart, TitleComponent, TooltipComponent, GridComponent, DatasetComponent, LegendComponent, CanvasRenderer]);\nexport default {\n  name: 'GreenhouseDetail',\n  components: {\n    VChart\n  },\n  data() {\n    return {\n      greenhouse: {},\n      temperatureChart: {},\n      humidityChart: {},\n      soilChart: {},\n      lightChart: {}\n    };\n  },\n  created() {\n    const id = this.$route.query.id;\n    this.loadGreenhouse(id);\n    this.loadEnvData(id);\n  },\n  methods: {\n    handleVideoError() {\n      this.$message.error(\"视频加载失败，请检查链接是否正确\");\n    },\n    loadGreenhouse(id) {\n      this.$request.get(`/api/greenhouse/getById?id=${id}`).then(res => {\n        this.greenhouse = res.data || {};\n        if (this.greenhouse.videoUrl && !this.greenhouse.videoUrl.startsWith('http')) {\n          this.greenhouse.videoUrl = this.$baseUrl + this.greenhouse.videoUrl;\n        }\n      });\n    },\n    loadEnvData(id) {\n      this.$request.get(`/api/environment/history/${id}`).then(res => {\n        const records = res.data || [];\n        const dates = records.map(r => r.recordDate);\n        this.temperatureChart = {\n          xAxis: {\n            type: 'category',\n            data: dates\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: records.map(r => r.temperature),\n            type: 'line',\n            smooth: true,\n            itemStyle: {\n              color: '#f56c6c'\n            }\n          }]\n        };\n        this.humidityChart = {\n          xAxis: {\n            type: 'category',\n            data: dates\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: records.map(r => r.humidity),\n            type: 'line',\n            smooth: true,\n            itemStyle: {\n              color: '#409EFF'\n            }\n          }]\n        };\n        this.soilChart = {\n          xAxis: {\n            type: 'category',\n            data: dates\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: records.map(r => r.soilMoisture),\n            type: 'line',\n            smooth: true,\n            itemStyle: {\n              color: '#67C23A'\n            }\n          }]\n        };\n        this.lightChart = {\n          xAxis: {\n            type: 'category',\n            data: dates\n          },\n          yAxis: {\n            type: 'value'\n          },\n          series: [{\n            data: records.map(r => r.lightIntensity),\n            type: 'line',\n            smooth: true,\n            itemStyle: {\n              color: '#E6A23C'\n            }\n          }]\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["VChart","echarts","LineChart","TitleComponent","TooltipComponent","GridComponent","DatasetComponent","LegendComponent","CanvasRenderer","use","name","components","data","greenhouse","temperatureChart","humidityChart","soilChart","lightChart","created","id","$route","query","loadGreenhouse","loadEnvData","methods","handleVideoError","$message","error","$request","get","then","res","videoUrl","startsWith","$baseUrl","records","dates","map","r","recordDate","xAxis","type","yAxis","series","temperature","smooth","itemStyle","color","humidity","soilMoisture","lightIntensity"],"sources":["src/views/manager/GreenhouseDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"detail-page\">\r\n    <!-- 视频监控 -->\r\n    <div class=\"video-container\" v-if=\"greenhouse.videoUrl\">\r\n      <video\r\n          :src=\"greenhouse.videoUrl\"\r\n          controls\r\n          class=\"video-player\"\r\n          @error=\"handleVideoError\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 图表区 -->\r\n    <div class=\"charts\">\r\n      <!-- 第一行：温度 + 湿度 -->\r\n      <div class=\"chart-row\">\r\n        <div class=\"chart-card card-temp\">\r\n          <h3>温度变化（℃）</h3>\r\n          <v-chart :option=\"temperatureChart\" class=\"chart\" />\r\n        </div>\r\n        <div class=\"chart-card card-humidity\">\r\n          <h3>湿度变化（%）</h3>\r\n          <v-chart :option=\"humidityChart\" class=\"chart\" />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 第二行：土壤湿度 + 光照强度 -->\r\n      <div class=\"chart-row\">\r\n        <div class=\"chart-card card-soil\">\r\n          <h3>土壤湿度</h3>\r\n          <v-chart :option=\"soilChart\" class=\"chart\" />\r\n        </div>\r\n        <div class=\"chart-card card-light\">\r\n          <h3>光照强度</h3>\r\n          <v-chart :option=\"lightChart\" class=\"chart\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VChart from 'vue-echarts'\r\nimport * as echarts from 'echarts/core'\r\nimport { LineChart } from 'echarts/charts'\r\nimport {\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  DatasetComponent,\r\n  LegendComponent\r\n} from 'echarts/components'\r\nimport { CanvasRenderer } from 'echarts/renderers'\r\n\r\necharts.use([\r\n  LineChart,\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  DatasetComponent,\r\n  LegendComponent,\r\n  CanvasRenderer\r\n])\r\n\r\nexport default {\r\n  name: 'GreenhouseDetail',\r\n  components: {\r\n    VChart\r\n  },\r\n  data() {\r\n    return {\r\n      greenhouse: {},\r\n      temperatureChart: {},\r\n      humidityChart: {},\r\n      soilChart: {},\r\n      lightChart: {}\r\n    }\r\n  },\r\n  created() {\r\n    const id = this.$route.query.id\r\n    this.loadGreenhouse(id)\r\n    this.loadEnvData(id)\r\n  },\r\n  methods: {\r\n    handleVideoError() {\r\n      this.$message.error(\"视频加载失败，请检查链接是否正确\")\r\n    },\r\n    loadGreenhouse(id) {\r\n      this.$request.get(`/api/greenhouse/getById?id=${id}`).then(res => {\r\n        this.greenhouse = res.data || {}\r\n        if (this.greenhouse.videoUrl && !this.greenhouse.videoUrl.startsWith('http')) {\r\n          this.greenhouse.videoUrl = this.$baseUrl + this.greenhouse.videoUrl\r\n        }\r\n      })\r\n    },\r\n    loadEnvData(id) {\r\n      this.$request.get(`/api/environment/history/${id}`).then(res => {\r\n        const records = res.data || []\r\n        const dates = records.map(r => r.recordDate)\r\n\r\n        this.temperatureChart = {\r\n          xAxis: { type: 'category', data: dates },\r\n          yAxis: { type: 'value' },\r\n          series: [{\r\n            data: records.map(r => r.temperature),\r\n            type: 'line',\r\n            smooth: true,\r\n            itemStyle: { color: '#f56c6c' }\r\n          }]\r\n        }\r\n\r\n        this.humidityChart = {\r\n          xAxis: { type: 'category', data: dates },\r\n          yAxis: { type: 'value' },\r\n          series: [{\r\n            data: records.map(r => r.humidity),\r\n            type: 'line',\r\n            smooth: true,\r\n            itemStyle: { color: '#409EFF' }\r\n          }]\r\n        }\r\n\r\n        this.soilChart = {\r\n          xAxis: { type: 'category', data: dates },\r\n          yAxis: { type: 'value' },\r\n          series: [{\r\n            data: records.map(r => r.soilMoisture),\r\n            type: 'line',\r\n            smooth: true,\r\n            itemStyle: { color: '#67C23A' }\r\n          }]\r\n        }\r\n\r\n        this.lightChart = {\r\n          xAxis: { type: 'category', data: dates },\r\n          yAxis: { type: 'value' },\r\n          series: [{\r\n            data: records.map(r => r.lightIntensity),\r\n            type: 'line',\r\n            smooth: true,\r\n            itemStyle: { color: '#E6A23C' }\r\n          }]\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.detail-page {\r\n  padding: 20px;\r\n}\r\n\r\n.video-container {\r\n  width: 100%;\r\n  height: 400px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.video-player {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 8px;\r\n}\r\n\r\n.charts {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 30px;\r\n}\r\n\r\n.chart-row {\r\n  display: flex;\r\n  gap: 30px;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.chart-card {\r\n  flex: 1;\r\n  min-width: 48%;\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.chart {\r\n  width: 100%;\r\n  height: 300px;\r\n}\r\n\r\n/* 颜色区分卡片背景（可选） */\r\n.card-temp { background: #fff5f5; }\r\n.card-humidity { background: #f0f9ff; }\r\n.card-soil { background: #f6ffed; }\r\n.card-light { background: #fffaf0; }\r\n</style>\r\n"],"mappings":"AA0CA,OAAAA,MAAA;AACA,YAAAC,OAAA;AACA,SAAAC,SAAA;AACA,SACAC,cAAA,EACAC,gBAAA,EACAC,aAAA,EACAC,gBAAA,EACAC,eAAA,QACA;AACA,SAAAC,cAAA;AAEAP,OAAA,CAAAQ,GAAA,EACAP,SAAA,EACAC,cAAA,EACAC,gBAAA,EACAC,aAAA,EACAC,gBAAA,EACAC,eAAA,EACAC,cAAA,CACA;AAEA;EACAE,IAAA;EACAC,UAAA;IACAX;EACA;EACAY,KAAA;IACA;MACAC,UAAA;MACAC,gBAAA;MACAC,aAAA;MACAC,SAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;IACA,KAAAG,cAAA,CAAAH,EAAA;IACA,KAAAI,WAAA,CAAAJ,EAAA;EACA;EACAK,OAAA;IACAC,iBAAA;MACA,KAAAC,QAAA,CAAAC,KAAA;IACA;IACAL,eAAAH,EAAA;MACA,KAAAS,QAAA,CAAAC,GAAA,+BAAAV,EAAA,IAAAW,IAAA,CAAAC,GAAA;QACA,KAAAlB,UAAA,GAAAkB,GAAA,CAAAnB,IAAA;QACA,SAAAC,UAAA,CAAAmB,QAAA,UAAAnB,UAAA,CAAAmB,QAAA,CAAAC,UAAA;UACA,KAAApB,UAAA,CAAAmB,QAAA,QAAAE,QAAA,QAAArB,UAAA,CAAAmB,QAAA;QACA;MACA;IACA;IACAT,YAAAJ,EAAA;MACA,KAAAS,QAAA,CAAAC,GAAA,6BAAAV,EAAA,IAAAW,IAAA,CAAAC,GAAA;QACA,MAAAI,OAAA,GAAAJ,GAAA,CAAAnB,IAAA;QACA,MAAAwB,KAAA,GAAAD,OAAA,CAAAE,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,UAAA;QAEA,KAAAzB,gBAAA;UACA0B,KAAA;YAAAC,IAAA;YAAA7B,IAAA,EAAAwB;UAAA;UACAM,KAAA;YAAAD,IAAA;UAAA;UACAE,MAAA;YACA/B,IAAA,EAAAuB,OAAA,CAAAE,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAM,WAAA;YACAH,IAAA;YACAI,MAAA;YACAC,SAAA;cAAAC,KAAA;YAAA;UACA;QACA;QAEA,KAAAhC,aAAA;UACAyB,KAAA;YAAAC,IAAA;YAAA7B,IAAA,EAAAwB;UAAA;UACAM,KAAA;YAAAD,IAAA;UAAA;UACAE,MAAA;YACA/B,IAAA,EAAAuB,OAAA,CAAAE,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAU,QAAA;YACAP,IAAA;YACAI,MAAA;YACAC,SAAA;cAAAC,KAAA;YAAA;UACA;QACA;QAEA,KAAA/B,SAAA;UACAwB,KAAA;YAAAC,IAAA;YAAA7B,IAAA,EAAAwB;UAAA;UACAM,KAAA;YAAAD,IAAA;UAAA;UACAE,MAAA;YACA/B,IAAA,EAAAuB,OAAA,CAAAE,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAW,YAAA;YACAR,IAAA;YACAI,MAAA;YACAC,SAAA;cAAAC,KAAA;YAAA;UACA;QACA;QAEA,KAAA9B,UAAA;UACAuB,KAAA;YAAAC,IAAA;YAAA7B,IAAA,EAAAwB;UAAA;UACAM,KAAA;YAAAD,IAAA;UAAA;UACAE,MAAA;YACA/B,IAAA,EAAAuB,OAAA,CAAAE,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAY,cAAA;YACAT,IAAA;YACAI,MAAA;YACAC,SAAA;cAAAC,KAAA;YAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}