{"ast":null,"code":"import VChart from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport { LineChart } from 'echarts/charts';\nimport { GridComponent, TooltipComponent, DatasetComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\necharts.use([LineChart, GridComponent, TooltipComponent, DatasetComponent, CanvasRenderer]);\nexport default {\n  name: 'Home',\n  components: {\n    VChart\n  },\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      kpi: {\n        greenhouseTotal: 0,\n        taskTodo: 0,\n        envAlarm: 0\n      },\n      greenhouses: [],\n      tasks: [],\n      miniChart: {},\n      weather: null\n    };\n  },\n  computed: {\n    todoTasks() {\n      return this.tasks.filter(t => t.completed !== '是').slice(0, 5);\n    }\n  },\n  created() {\n    this.loadGreenhouses();\n    this.loadTasks();\n    this.loadMiniChart();\n    this.loadWeather();\n  },\n  methods: {\n    /* ---------- 数据拉取 ---------- */\n    loadGreenhouses() {\n      this.$request.get('/api/greenhouse/getAll').then(r => {\n        this.greenhouses = r.data || [];\n        this.kpi.greenhouseTotal = this.greenhouses.length;\n        this.kpi.envAlarm = this.greenhouses.filter(g => g.temperature > 35 || g.humidity < 30).length;\n      });\n    },\n    loadTasks() {\n      this.$request.get('/api/task/getAll').then(r => {\n        this.tasks = r.data || [];\n        this.kpi.taskTodo = this.tasks.filter(t => t.completed !== '是').length;\n      });\n    },\n    loadMiniChart() {\n      this.$request.get('/api/environment/history/1').then(r => {\n        const rows = (r.data || []).slice(-48);\n        const temp = rows.map(i => i.temperature);\n        const hum = rows.map(i => i.humidity);\n        this.miniChart = {\n          grid: {\n            left: 0,\n            right: 0,\n            top: 10,\n            bottom: 20\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis: {\n            type: 'category',\n            data: rows.map(i => i.recordDate),\n            show: false\n          },\n          yAxis: {\n            type: 'value',\n            show: false\n          },\n          series: [{\n            data: temp,\n            type: 'line',\n            smooth: true,\n            name: '温度',\n            lineStyle: {\n              color: '#ff7f50'\n            }\n          }, {\n            data: hum,\n            type: 'line',\n            smooth: true,\n            name: '湿度',\n            lineStyle: {\n              color: '#1e90ff'\n            }\n          }]\n        };\n      });\n    },\n    loadWeather() {\n      /* demo 数据，可替换真实天气 API */\n      this.weather = {\n        temp: 23,\n        text: '多云',\n        wind: '南风 3级'\n      };\n    },\n    /* ---------- 操作 ---------- */\n    finishTask(row) {\n      row.completed = '是';\n      this.$request.post('/api/task/save', row).then(() => {\n        this.$message.success('已标记完成');\n        this.loadTasks();\n      });\n    },\n    quickToggle(type, status) {\n      const label = type === 'irrigation' ? '灌溉' : '灯光';\n      this.$confirm(`确认将所有大棚“${label}”统一${status ? '开启' : '关闭'}？`, '提示', {\n        type: 'warning'\n      }).then(() => Promise.all(this.greenhouses.map(g => this.$request.post(`/api/greenhouse/${g.greenhouseId}/toggle/${type}`, {\n        status\n      })))).then(() => {\n        this.$message.success('操作已执行');\n        this.loadGreenhouses();\n      });\n    }\n  }\n};","map":{"version":3,"names":["VChart","echarts","LineChart","GridComponent","TooltipComponent","DatasetComponent","CanvasRenderer","use","name","components","data","user","JSON","parse","localStorage","getItem","kpi","greenhouseTotal","taskTodo","envAlarm","greenhouses","tasks","miniChart","weather","computed","todoTasks","filter","t","completed","slice","created","loadGreenhouses","loadTasks","loadMiniChart","loadWeather","methods","$request","get","then","r","length","g","temperature","humidity","rows","temp","map","i","hum","grid","left","right","top","bottom","tooltip","trigger","xAxis","type","recordDate","show","yAxis","series","smooth","lineStyle","color","text","wind","finishTask","row","post","$message","success","quickToggle","status","label","$confirm","Promise","all","greenhouseId"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n\n    <!-- ① 欢迎 -->\n    <el-card class=\"greet-card\">\n      您好，{{ user?.userName }}！欢迎使用本系统\n    </el-card>\n\n    <!-- ② 关键指标 -->\n    <div class=\"kpi-wrap\">\n      <el-card class=\"kpi\" body-style=\"padding:16px\">\n        <div class=\"kpi-num\">{{ kpi.greenhouseTotal }}</div>\n        <div class=\"kpi-label\">在线大棚</div>\n      </el-card>\n\n      <el-card class=\"kpi\" body-style=\"padding:16px\">\n        <div class=\"kpi-num\">{{ kpi.taskTodo }}</div>\n        <div class=\"kpi-label\">待办任务</div>\n      </el-card>\n\n      <el-card class=\"kpi\" body-style=\"padding:16px\">\n        <div class=\"kpi-num\">{{ kpi.envAlarm }}</div>\n        <div class=\"kpi-label\">环境报警</div>\n      </el-card>\n    </div>\n\n    <!-- ③ 大棚状态表 -->\n    <el-card shadow=\"always\" class=\"mt20\">\n      <div slot=\"header\" class=\"card-title\">大棚状态 (Top 5)</div>\n      <el-table :data=\"greenhouses.slice(0,5)\" border size=\"mini\">\n        <el-table-column prop=\"greenhouseName\" label=\"名称\"/>\n        <el-table-column prop=\"irrigationStatus\" label=\"灌溉\" width=\"80\">\n          <template slot-scope=\"s\">\n            <el-tag :type=\"s.row.irrigationStatus?'success':'info'\" size=\"mini\">\n              {{ s.row.irrigationStatus ? '✔' : '✘' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"ventilationStatus\" label=\"通风\" width=\"80\">\n          <template slot-scope=\"s\">\n            <el-tag :type=\"s.row.ventilationStatus?'success':'info'\" size=\"mini\">\n              {{ s.row.ventilationStatus ? '✔' : '✘' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"lightingStatus\" label=\"灯光\" width=\"80\">\n          <template slot-scope=\"s\">\n            <el-tag :type=\"s.row.lightingStatus?'warning':'info'\" size=\"mini\">\n              {{ s.row.lightingStatus ? '✔' : '✘' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"100\">\n          <template slot-scope=\"s\">\n            <el-button type=\"text\" size=\"mini\"\n                       @click=\"$router.push({name:'GreenhouseDetail',query:{id:s.row.greenhouseId}})\">详情</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- ④ mini 折线图 + 天气 -->\n    <div class=\"mini-section\">\n      <el-card class=\"mini-chart-card\" shadow=\"always\">\n        <div slot=\"header\" class=\"card-title\">温/湿最近 24h</div>\n        <v-chart :option=\"miniChart\" style=\"height:120px\"/>\n      </el-card>\n\n      <el-card class=\"weather-card\" shadow=\"always\">\n        <div slot=\"header\" class=\"card-title\">今日天气</div>\n        <div v-if=\"weather\">\n          <div style=\"font-size:28px\">{{ weather.temp }}°C</div>\n          <div>{{ weather.text }} / {{ weather.wind }}</div>\n        </div>\n        <div v-else>加载中...</div>\n      </el-card>\n    </div>\n\n    <!-- ⑤ 待办任务 -->\n    <el-card shadow=\"always\" class=\"mt20\">\n      <div slot=\"header\" class=\"card-title\">待办任务</div>\n      <el-table :data=\"todoTasks\" stripe size=\"mini\" height=\"220\">\n        <el-table-column prop=\"name\" label=\"任务\"/>\n        <el-table-column prop=\"taskGreenhouseName\" label=\"大棚\" width=\"120\"/>\n        <el-table-column prop=\"deadline\" label=\"截止\" width=\"160\"/>\n        <el-table-column width=\"80\">\n          <template slot=\"header\">操作</template>\n          <template slot-scope=\"s\">\n            <el-button type=\"text\" size=\"mini\" @click=\"finishTask(s.row)\">完成</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- ⑥ 快捷操作 -->\n    <el-card shadow=\"always\" class=\"mt20\">\n      <div slot=\"header\" class=\"card-title\">快捷操作</div>\n      <el-button type=\"primary\" plain @click=\"quickToggle('irrigation',1)\">全部开启灌溉</el-button>\n      <el-button type=\"warning\" plain class=\"mt10\" @click=\"quickToggle('lighting',0)\">全部关闭灯光</el-button>\n    </el-card>\n\n  </div>\n</template>\n\n<script>\nimport VChart from 'vue-echarts'\nimport * as echarts from 'echarts/core'\nimport {LineChart} from 'echarts/charts'\nimport {GridComponent, TooltipComponent, DatasetComponent} from 'echarts/components'\nimport {CanvasRenderer} from 'echarts/renderers'\necharts.use([LineChart, GridComponent, TooltipComponent, DatasetComponent, CanvasRenderer])\n\nexport default {\n  name: 'Home',\n  components: { VChart },\n  data () {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n\n      kpi: { greenhouseTotal: 0, taskTodo: 0, envAlarm: 0 },\n\n      greenhouses: [],\n      tasks: [],\n\n      miniChart: {},\n\n      weather: null\n    }\n  },\n  computed: {\n    todoTasks () {\n      return this.tasks.filter(t => t.completed !== '是').slice(0, 5)\n    }\n  },\n  created () {\n    this.loadGreenhouses()\n    this.loadTasks()\n    this.loadMiniChart()\n    this.loadWeather()\n  },\n  methods: {\n    /* ---------- 数据拉取 ---------- */\n    loadGreenhouses () {\n      this.$request.get('/api/greenhouse/getAll').then(r => {\n        this.greenhouses         = r.data || []\n        this.kpi.greenhouseTotal = this.greenhouses.length\n        this.kpi.envAlarm        = this.greenhouses.filter(g => g.temperature>35 || g.humidity<30).length\n      })\n    },\n    loadTasks () {\n      this.$request.get('/api/task/getAll').then(r => {\n        this.tasks        = r.data || []\n        this.kpi.taskTodo = this.tasks.filter(t => t.completed !== '是').length\n      })\n    },\n    loadMiniChart () {\n      this.$request.get('/api/environment/history/1').then(r => {\n        const rows  = (r.data||[]).slice(-48)\n        const temp  = rows.map(i=>i.temperature)\n        const hum   = rows.map(i=>i.humidity)\n        this.miniChart = {\n          grid:{left:0,right:0,top:10,bottom:20},\n          tooltip:{trigger:'axis'},\n          xAxis:{type:'category',data:rows.map(i=>i.recordDate),show:false},\n          yAxis:{type:'value',show:false},\n          series:[\n            {data:temp,type:'line',smooth:true,name:'温度',lineStyle:{color:'#ff7f50'}},\n            {data:hum, type:'line',smooth:true,name:'湿度',lineStyle:{color:'#1e90ff'}}\n          ]\n        }\n      })\n    },\n    loadWeather () {            /* demo 数据，可替换真实天气 API */\n      this.weather = { temp: 23, text:'多云', wind:'南风 3级' }\n    },\n\n    /* ---------- 操作 ---------- */\n    finishTask (row) {\n      row.completed = '是'\n      this.$request.post('/api/task/save', row).then(()=>{\n        this.$message.success('已标记完成')\n        this.loadTasks()\n      })\n    },\n    quickToggle (type, status) {\n      const label = type==='irrigation' ? '灌溉' : '灯光'\n      this.$confirm(`确认将所有大棚“${label}”统一${status?'开启':'关闭'}？`,\n          '提示', {type:'warning'})\n          .then(()=>Promise.all(\n              this.greenhouses.map(g =>\n                  this.$request.post(`/api/greenhouse/${g.greenhouseId}/toggle/${type}`,{status}))))\n          .then(()=>{ this.$message.success('操作已执行'); this.loadGreenhouses() })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home-container { padding:20px }\n.mt20            { margin-top:20px }\n.greet-card      { font-weight:600;font-size:20px }\n.card-title      { font-weight:600 }\n\n.kpi-wrap { display:flex; gap:20px; margin:20px 0 }\n.kpi      { flex:1; text-align:center }\n.kpi-num  { font-size:32px; font-weight:700 }\n.kpi-label{ color:#888 }\n\n.mini-section      { display:flex; gap:20px; margin-top:20px }\n.mini-chart-card   { flex:2 }\n.weather-card      { flex:1; display:flex; justify-content:center; align-items:center }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}