{"ast":null,"code":"export default {\n  name: 'Farmer',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      searchForm: {\n        userName: '',\n        phone: ''\n      },\n      users: [],\n      selectedIds: [],\n      formVisible: false,\n      form: {},\n      rules: {\n        userName: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入电话',\n          trigger: 'blur'\n        }, {\n          pattern: /^\\d{11}$/,\n          message: '手机号必须为11位数字',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'change'\n        }],\n        gender: [{\n          required: true,\n          message: '请选择性别',\n          trigger: 'change'\n        }],\n        idCard: [{\n          required: true,\n          message: '请输入身份证号',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            const idCardPattern = /^\\d{17}[\\dXx]$/;\n            if (!idCardPattern.test(value)) {\n              callback(new Error('身份证号格式不正确'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '请输入地址',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.loadUsers();\n  },\n  methods: {\n    loadUsers() {\n      this.$request.get('/api/user/getAllUser', {\n        params: this.searchForm\n      }).then(res => {\n        const all = res.data || [];\n        this.users = all.filter(u => u.role && (u.role.toLowerCase() === 'farmer' || u.role === '农民工'));\n      });\n    },\n    resetSearch() {\n      this.searchForm = {\n        userName: '',\n        phone: ''\n      };\n      this.loadUsers();\n    },\n    addUser() {\n      this.form = {};\n      this.form.role = '农民工';\n      this.formVisible = true;\n    },\n    handleSelectionChange(rows) {\n      this.selectedIds = rows.map(item => item.userId);\n    },\n    deleteBatch() {\n      this.$confirm(`是否确认删除选中的 ${this.selectedIds.length} 个用户？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$request.post('/api/user/deleteBatch', this.selectedIds).then(res => {\n          if (res.code === '200') {\n            this.$message.success('删除成功');\n            this.loadUsers();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {});\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.userId ? '/api/user/update' : '/api/user/add',\n            method: this.form.userId ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              this.$message.success('保存成功');\n              this.loadUsers();\n              this.formVisible = false;\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","user","JSON","parse","localStorage","getItem","searchForm","userName","phone","users","selectedIds","formVisible","form","rules","required","message","trigger","pattern","password","role","gender","idCard","validator","rule","value","callback","idCardPattern","test","Error","address","created","loadUsers","methods","$request","get","params","then","res","all","filter","u","toLowerCase","resetSearch","addUser","handleSelectionChange","rows","map","item","userId","deleteBatch","$confirm","length","confirmButtonText","cancelButtonText","type","post","code","$message","success","error","msg","catch","save","$refs","formRef","validate","valid","url","method"],"sources":["src/views/manager/Farmer.vue"],"sourcesContent":["<template>\n  <div class=\"main-content\">\n    <!-- 顶部欢迎 -->\n    <div class=\"card\" style=\"margin-bottom: 20px; font-weight: bold; font-size: 20px;\">\n      您好，{{ user?.userName }}！欢迎使用本系统\n    </div>\n\n    <!-- 搜索区域 -->\n    <div class=\"card\" style=\"margin-bottom: 10px;\">\n      <el-form :inline=\"true\" :model=\"searchForm\">\n        <el-form-item label=\"姓名\">\n          <el-input v-model=\"searchForm.userName\" placeholder=\"请输入姓名\" clearable></el-input>\n        </el-form-item>\n        <el-form-item label=\"电话\">\n          <el-input v-model=\"searchForm.phone\" placeholder=\"请输入电话\" clearable></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"loadUsers\">查询</el-button>\n          <el-button type=\"info\" icon=\"el-icon-refresh\" @click=\"resetSearch\">重置</el-button>\n          <el-button type=\"success\" icon=\"el-icon-plus\" @click=\"addUser\">新增</el-button>\n          <el-button type=\"danger\" icon=\"el-icon-delete\" @click=\"deleteBatch\" :disabled=\"!selectedIds.length\">批量删除</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <!-- 表格 -->\n    <div class=\"card\">\n      <el-table :data=\"users\" border stripe style=\"width: 100%;\" @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"50\"></el-table-column>\n        <el-table-column prop=\"userId\" label=\"ID\" width=\"60\"/>\n        <el-table-column prop=\"userName\" label=\"姓名\"/>\n        <el-table-column prop=\"phone\" label=\"电话\"/>\n        <el-table-column prop=\"role\" label=\"角色\"/>\n        <el-table-column prop=\"gender\" label=\"性别\"/>\n        <el-table-column prop=\"idCard\" label=\"身份证号\"/>\n        <el-table-column prop=\"address\" label=\"地址\"/>\n        <el-table-column prop=\"createDate\" label=\"创建时间\"/>\n        <el-table-column prop=\"imageUrl\" label=\"头像URL\"/>\n      </el-table>\n    </div>\n\n    <!-- 新增弹窗 -->\n    <el-dialog title=\"新增用户\" :visible.sync=\"formVisible\" width=\"600px\">\n      <el-form :model=\"form\" ref=\"formRef\" :rules=\"rules\" label-width=\"100px\">\n        <el-form-item label=\"姓名\" prop=\"userName\">\n          <el-input v-model=\"form.userName\" />\n        </el-form-item>\n        <el-form-item label=\"电话\" prop=\"phone\">\n          <el-input v-model=\"form.phone\" />\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"form.password\" type=\"password\" />\n        </el-form-item>\n        <el-form-item label=\"角色\" prop=\"role\">\n          <el-select v-model=\"form.role\" placeholder=\"请选择角色\">\n            <el-option label=\"农民工\" value=\"农民工\" />\n            <el-option label=\"管理员\" value=\"管理员\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"性别\" prop=\"gender\">\n          <el-radio-group v-model=\"form.gender\">\n            <el-radio label=\"男\" />\n            <el-radio label=\"女\" />\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"身份证号\" prop=\"idCard\">\n          <el-input v-model=\"form.idCard\" />\n        </el-form-item>\n        <el-form-item label=\"地址\" prop=\"address\">\n          <el-input v-model=\"form.address\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"formVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"save\">保存</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Farmer',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      searchForm: {\n        userName: '',\n        phone: ''\n      },\n      users: [],\n      selectedIds: [],\n      formVisible: false,\n      form: {},\n      rules: {\n        userName: [{ required: true, message: '请输入姓名', trigger: 'blur' }],\n        phone: [{ required: true, message: '请输入电话', trigger: 'blur' },\n          { pattern: /^\\d{11}$/, message: '手机号必须为11位数字', trigger: 'blur' }],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ],\n        role: [{ required: true, message: '请选择角色', trigger: 'change' }],\n        gender: [{ required: true, message: '请选择性别', trigger: 'change' }],\n        idCard: [\n          { required: true, message: '请输入身份证号', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              const idCardPattern = /^\\d{17}[\\dXx]$/;\n              if (!idCardPattern.test(value)) {\n                callback(new Error('身份证号格式不正确'));\n              } else {\n                callback();\n              }\n            }, trigger: 'blur'\n          }\n        ],\n        address: [{ required: true, message: '请输入地址', trigger: 'blur' }]\n      }\n    }\n  },\n  created() {\n    this.loadUsers()\n  },\n  methods: {\n    loadUsers() {\n      this.$request.get('/api/user/getAllUser', {\n        params: this.searchForm\n      }).then(res => {\n        const all = res.data || []\n        this.users = all.filter(u => u.role && (u.role.toLowerCase() === 'farmer' || u.role === '农民工'))\n      })\n    },\n    resetSearch() {\n      this.searchForm = { userName: '', phone: '' }\n      this.loadUsers()\n    },\n    addUser() {\n      this.form = {}\n      this.form.role = '农民工'\n      this.formVisible = true\n    },\n    handleSelectionChange(rows) {\n      this.selectedIds = rows.map(item => item.userId)\n    },\n    deleteBatch() {\n      this.$confirm(`是否确认删除选中的 ${this.selectedIds.length} 个用户？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.$request.post('/api/user/deleteBatch', this.selectedIds).then(res => {\n          if (res.code === '200') {\n            this.$message.success('删除成功')\n            this.loadUsers()\n          } else {\n            this.$message.error(res.msg)\n          }\n        })\n      }).catch(() => {})\n    },\n    save() {\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.$request({\n            url: this.form.userId ? '/api/user/update' : '/api/user/add',\n            method: this.form.userId ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              this.$message.success('保存成功')\n              this.loadUsers()\n              this.formVisible = false\n            } else {\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.main-content {\n  padding: 10px;\n}\n</style>"],"mappings":"AAiFA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,UAAA;QACAC,QAAA;QACAC,KAAA;MACA;MACAC,KAAA;MACAC,WAAA;MACAC,WAAA;MACAC,IAAA;MACAC,KAAA;QACAN,QAAA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAR,KAAA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,OAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;QACAE,QAAA,GACA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAG,IAAA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAI,MAAA;UAAAN,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAK,MAAA,GACA;UAAAP,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UACAM,SAAA,EAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;YACA,MAAAC,aAAA;YACA,KAAAA,aAAA,CAAAC,IAAA,CAAAH,KAAA;cACAC,QAAA,KAAAG,KAAA;YACA;cACAH,QAAA;YACA;UACA;UAAAT,OAAA;QACA,EACA;QACAa,OAAA;UAAAf,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAc,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACAD,UAAA;MACA,KAAAE,QAAA,CAAAC,GAAA;QACAC,MAAA,OAAA7B;MACA,GAAA8B,IAAA,CAAAC,GAAA;QACA,MAAAC,GAAA,GAAAD,GAAA,CAAArC,IAAA;QACA,KAAAS,KAAA,GAAA6B,GAAA,CAAAC,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAArB,IAAA,KAAAqB,CAAA,CAAArB,IAAA,CAAAsB,WAAA,mBAAAD,CAAA,CAAArB,IAAA;MACA;IACA;IACAuB,YAAA;MACA,KAAApC,UAAA;QAAAC,QAAA;QAAAC,KAAA;MAAA;MACA,KAAAuB,SAAA;IACA;IACAY,QAAA;MACA,KAAA/B,IAAA;MACA,KAAAA,IAAA,CAAAO,IAAA;MACA,KAAAR,WAAA;IACA;IACAiC,sBAAAC,IAAA;MACA,KAAAnC,WAAA,GAAAmC,IAAA,CAAAC,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,MAAA;IACA;IACAC,YAAA;MACA,KAAAC,QAAA,mBAAAxC,WAAA,CAAAyC,MAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAlB,IAAA;QACA,KAAAH,QAAA,CAAAsB,IAAA,+BAAA7C,WAAA,EAAA0B,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAmB,IAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAA3B,SAAA;UACA;YACA,KAAA0B,QAAA,CAAAE,KAAA,CAAAtB,GAAA,CAAAuB,GAAA;UACA;QACA;MACA,GAAAC,KAAA;IACA;IACAC,KAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAjC,QAAA;YACAkC,GAAA,OAAAvD,IAAA,CAAAoC,MAAA;YACAoB,MAAA,OAAAxD,IAAA,CAAAoC,MAAA;YACAhD,IAAA,OAAAY;UACA,GAAAwB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAmB,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAA3B,SAAA;cACA,KAAApB,WAAA;YACA;cACA,KAAA8C,QAAA,CAAAE,KAAA,CAAAtB,GAAA,CAAAuB,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}