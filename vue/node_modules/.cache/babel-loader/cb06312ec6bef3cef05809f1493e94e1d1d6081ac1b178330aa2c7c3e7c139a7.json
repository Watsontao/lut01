{"ast":null,"code":"// …（保留前文所有 import / 工具函数 / export default 头部）…\n\nexport default {\n  // …\n  data() {\n    return {\n      greenhouse: {\n        irrigationStatus: 0,\n        ventilationStatus: 0,\n        lightingStatus: 0\n      }\n      /* 其余字段略 */\n    };\n  },\n\n  /* created/loadGreenhouse/loadEnvData 均保持不变 */\n\n  methods: {\n    /* 已有方法 … */\n\n    /** 统一开关 */\n    toggle(type) {\n      const map = {\n        irrigation: '灌溉',\n        ventilation: '通风',\n        lighting: '灯光'\n      };\n      const id = this.$route.query.id;\n      this.$request.post(`/api/greenhouse/${id}/toggle/${type}`).then(res => {\n        this.$message.success(`${map[type]}状态已切换`);\n        // 更新本地状态，让按钮立即变色\n        const key = `${type}Status`;\n        this.greenhouse[key] = this.greenhouse[key] ? 0 : 1;\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","greenhouse","irrigationStatus","ventilationStatus","lightingStatus","methods","toggle","type","map","irrigation","ventilation","lighting","id","$route","query","$request","post","then","res","$message","success","key"],"sources":["src/views/manager/GreenhouseDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"detail-page\">\r\n    <!-- ► 监控视频 + 控制按钮 ◄ -->\r\n    <div class=\"video-wrap\">\r\n      <!-- 视频 -->\r\n      <div class=\"video-container\" v-if=\"greenhouse.videoUrl\">\r\n        <video :src=\"greenhouse.videoUrl\"\r\n               controls\r\n               class=\"video-player\"\r\n               @error=\"handleVideoError\" />\r\n      </div>\r\n\r\n      <!-- 右侧纵向按钮组 -->\r\n      <div class=\"control-panel\">\r\n        <el-button :type=\"greenhouse.irrigationStatus ? 'success' : 'info'\"\r\n                   icon=\"el-icon-s-platform\"\r\n                   @click=\"toggle('irrigation')\">\r\n          {{ greenhouse.irrigationStatus ? '停止灌溉' : '开始灌溉' }}\r\n        </el-button>\r\n\r\n        <el-button :type=\"greenhouse.ventilationStatus ? 'success' : 'info'\"\r\n                   icon=\"el-icon-wind-power\"\r\n                   @click=\"toggle('ventilation')\">\r\n          {{ greenhouse.ventilationStatus ? '关闭通风' : '开启通风' }}\r\n        </el-button>\r\n\r\n        <el-button :type=\"greenhouse.lightingStatus ? 'warning' : 'info'\"\r\n                   icon=\"el-icon-lightning\"\r\n                   @click=\"toggle('lighting')\">\r\n          {{ greenhouse.lightingStatus ? '关闭灯光' : '开启灯光' }}\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- ▼ 下面还是四张图表，不再赘述 ▼ -->\r\n    <!-- ……（保持你之前的图表区域不变即可）…… -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// …（保留前文所有 import / 工具函数 / export default 头部）…\r\n\r\nexport default {\r\n  // …\r\n  data () {\r\n    return {\r\n      greenhouse: {\r\n        irrigationStatus: 0,\r\n        ventilationStatus: 0,\r\n        lightingStatus: 0\r\n      },\r\n      /* 其余字段略 */\r\n    }\r\n  },\r\n  /* created/loadGreenhouse/loadEnvData 均保持不变 */\r\n\r\n  methods: {\r\n    /* 已有方法 … */\r\n\r\n    /** 统一开关 */\r\n    toggle (type) {\r\n      const map = { irrigation: '灌溉', ventilation: '通风', lighting: '灯光' }\r\n      const id  = this.$route.query.id\r\n      this.$request.post(`/api/greenhouse/${id}/toggle/${type}`).then(res => {\r\n        this.$message.success(`${map[type]}状态已切换`)\r\n        // 更新本地状态，让按钮立即变色\r\n        const key = `${type}Status`\r\n        this.greenhouse[key] = this.greenhouse[key] ? 0 : 1\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.detail-page   { padding:20px }\r\n/* ▶▶ 新增布局：视频左、按钮右 ◀◀ */\r\n.video-wrap    { display:flex; gap:20px; align-items:flex-start }\r\n.video-container{ width:100%; height:400px }\r\n.video-player  { width:100%; height:100%; border-radius:8px }\r\n.control-panel { display:flex; flex-direction:column; gap:15px }\r\n/* 其余样式（chart-row / chart-card …）保持不变 */\r\n</style>\r\n"],"mappings":"AAwCA;;AAEA;EACA;EACAA,KAAA;IACA;MACAC,UAAA;QACAC,gBAAA;QACAC,iBAAA;QACAC,cAAA;MACA;MACA;IACA;EACA;;EACA;;EAEAC,OAAA;IACA;;IAEA;IACAC,OAAAC,IAAA;MACA,MAAAC,GAAA;QAAAC,UAAA;QAAAC,WAAA;QAAAC,QAAA;MAAA;MACA,MAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;MACA,KAAAG,QAAA,CAAAC,IAAA,oBAAAJ,EAAA,WAAAL,IAAA,IAAAU,IAAA,CAAAC,GAAA;QACA,KAAAC,QAAA,CAAAC,OAAA,IAAAZ,GAAA,CAAAD,IAAA;QACA;QACA,MAAAc,GAAA,MAAAd,IAAA;QACA,KAAAN,UAAA,CAAAoB,GAAA,SAAApB,UAAA,CAAAoB,GAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}