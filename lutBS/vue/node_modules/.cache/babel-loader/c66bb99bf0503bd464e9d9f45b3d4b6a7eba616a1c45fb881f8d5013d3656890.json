{"ast":null,"code":"export default {\n  name: 'Admin',\n  data() {\n    return {\n      tableData: [],\n      searchForm: {\n        userName: '',\n        phone: ''\n      },\n      formVisible: false,\n      form: {},\n      rules: {\n        userName: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入电话',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'change'\n        }],\n        gender: [{\n          required: true,\n          message: '请选择性别',\n          trigger: 'change'\n        }],\n        idCard: [{\n          required: true,\n          message: '请输入身份证号',\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '请输入地址',\n          trigger: 'blur'\n        }]\n      },\n      selectedIds: [],\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      this.$request.get('/api/user/getAllUser').then(res => {\n        const all = res.data || [];\n        this.tableData = all.filter(u => u.role && (u.role.toLowerCase() === 'admin' || u.role === '管理员'));\n      });\n    },\n    searchUsers() {\n      this.$request.get('/api/user/search', {\n        params: this.searchForm\n      }).then(res => {\n        const all = res.data || [];\n        this.tableData = all.filter(u => u.role && (u.role.toLowerCase() === 'admin' || u.role === '管理员'));\n      });\n    },\n    resetSearch() {\n      this.searchForm = {\n        userName: '',\n        phone: ''\n      };\n      this.load();\n    },\n    handleAdd() {\n      this.form = {};\n      this.form.role = '管理员';\n      this.formVisible = true;\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.formVisible = true;\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.userId ? '/api/user/update' : '/api/user/add',\n            method: this.form.userId ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              this.$message.success('保存成功');\n              this.load();\n              this.formVisible = false;\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    handleSelectionChange(rows) {\n      this.selectedIds = rows.map(item => item.userId);\n    },\n    delBatch() {\n      if (!this.selectedIds.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(() => {\n        this.$request.post('/api/user/deleteBatch', this.selectedIds).then(res => {\n          if (res.code === '200') {\n            this.$message.success('删除成功');\n            this.load();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {});\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","searchForm","userName","phone","formVisible","form","rules","required","message","trigger","password","role","gender","idCard","address","selectedIds","user","JSON","parse","localStorage","getItem","created","load","methods","$request","get","then","res","all","filter","u","toLowerCase","searchUsers","params","resetSearch","handleAdd","handleEdit","row","stringify","save","$refs","formRef","validate","valid","url","userId","method","code","$message","success","error","msg","handleSelectionChange","rows","map","item","delBatch","length","warning","$confirm","type","post","catch"],"sources":["src/views/manager/Admin.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- 搜索栏 -->\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入姓名\" style=\"width: 200px\" v-model=\"searchForm.userName\"></el-input>\r\n      <el-input placeholder=\"请输入电话\" style=\"width: 200px; margin-left: 10px\" v-model=\"searchForm.phone\"></el-input>\r\n      <el-button type=\"primary\" plain style=\"margin-left: 10px\" @click=\"searchUsers\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"resetSearch\">重置</el-button>\r\n    </div>\r\n\r\n    <!-- 操作栏 -->\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <!-- 表格 -->\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"userId\" label=\"ID\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"userName\" label=\"姓名\"></el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\r\n        <el-table-column prop=\"role\" label=\"角色\"></el-table-column>\r\n        <el-table-column prop=\"gender\" label=\"性别\"></el-table-column>\r\n        <el-table-column prop=\"idCard\" label=\"身份证号\"></el-table-column>\r\n        <el-table-column prop=\"address\" label=\"地址\"></el-table-column>\r\n        <el-table-column prop=\"createDate\" label=\"创建时间\"></el-table-column>\r\n        <el-table-column prop=\"imageUrl\" label=\"头像URL\"></el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"180\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n\r\n    <!-- 弹窗表单 -->\r\n    <el-dialog title=\"管理员信息\" :visible.sync=\"formVisible\" width=\"600px\">\r\n      <el-form :model=\"form\" label-width=\"100px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"姓名\" prop=\"userName\">\r\n          <el-input v-model=\"form.userName\" placeholder=\"请输入姓名\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"form.phone\" placeholder=\"请输入电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n          <el-input v-model=\"form.password\" placeholder=\"请输入密码\" type=\"password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"角色\" prop=\"role\">\r\n          <el-select v-model=\"form.role\">\r\n            <el-option label=\"管理员\" value=\"管理员\" />\r\n            <el-option label=\"admin\" value=\"admin\" />\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"性别\" prop=\"gender\">\r\n          <el-radio-group v-model=\"form.gender\">\r\n            <el-radio label=\"男\" />\r\n            <el-radio label=\"女\" />\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"身份证号\" prop=\"idCard\">\r\n          <el-input v-model=\"form.idCard\" placeholder=\"请输入身份证号\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"地址\" prop=\"address\">\r\n          <el-input v-model=\"form.address\" placeholder=\"请输入地址\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"formVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">保存</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Admin',\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      searchForm: { userName: '', phone: '' },\r\n      formVisible: false,\r\n      form: {},\r\n      rules: {\r\n        userName: [{ required: true, message: '请输入姓名', trigger: 'blur' }],\r\n        phone: [{ required: true, message: '请输入电话', trigger: 'blur' }],\r\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\r\n        role: [{ required: true, message: '请选择角色', trigger: 'change' }],\r\n        gender: [{ required: true, message: '请选择性别', trigger: 'change' }],\r\n        idCard: [{ required: true, message: '请输入身份证号', trigger: 'blur' }],\r\n        address: [{ required: true, message: '请输入地址', trigger: 'blur' }]\r\n      },\r\n      selectedIds: [],\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n  },\r\n  methods: {\r\n    load() {\r\n      this.$request.get('/api/user/getAllUser').then(res => {\r\n        const all = res.data || []\r\n        this.tableData = all.filter(u => u.role && (u.role.toLowerCase() === 'admin' || u.role === '管理员'))\r\n      })\r\n    },\r\n    searchUsers() {\r\n      this.$request.get('/api/user/search', {\r\n        params: this.searchForm\r\n      }).then(res => {\r\n        const all = res.data || []\r\n        this.tableData = all.filter(u => u.role && (u.role.toLowerCase() === 'admin' || u.role === '管理员'))\r\n      })\r\n    },\r\n    resetSearch() {\r\n      this.searchForm = { userName: '', phone: '' }\r\n      this.load()\r\n    },\r\n    handleAdd() {\r\n      this.form = {}\r\n      this.form.role = '管理员'\r\n      this.formVisible = true\r\n    },\r\n    handleEdit(row) {\r\n      this.form = JSON.parse(JSON.stringify(row))\r\n      this.formVisible = true\r\n    },\r\n    save() {\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.userId ? '/api/user/update' : '/api/user/add',\r\n            method: this.form.userId ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {\r\n              this.$message.success('保存成功')\r\n              this.load()\r\n              this.formVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {\r\n      this.selectedIds = rows.map(item => item.userId)\r\n    },\r\n    delBatch() {\r\n      if (!this.selectedIds.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', { type: \"warning\" }).then(() => {\r\n        this.$request.post('/api/user/deleteBatch', this.selectedIds).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success('删除成功')\r\n            this.load()\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }).catch(() => {})\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.search, .operation {\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}