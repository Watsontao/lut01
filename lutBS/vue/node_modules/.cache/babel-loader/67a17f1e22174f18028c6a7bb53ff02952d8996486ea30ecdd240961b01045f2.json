{"ast":null,"code":"import VChart from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport { LineChart } from 'echarts/charts';\nimport { TitleComponent, TooltipComponent, GridComponent, LegendComponent, DataZoomComponent, ToolboxComponent } from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\necharts.use([LineChart, TitleComponent, TooltipComponent, GridComponent, LegendComponent, DataZoomComponent, ToolboxComponent, CanvasRenderer]);\n\n/* X 轴时间格式 */\nconst formatDateLabel = val => {\n  const d = new Date(val);\n  const m = d.getMonth() + 1;\n  const day = d.getDate();\n  const hh = String(d.getHours()).padStart(2, '0');\n  const mm = String(d.getMinutes()).padStart(2, '0');\n  return `${m}-${day} ${hh}:${mm}`;\n};\n\n/* 生成渐变色 */\nconst genGradient = (c1, c2) => ({\n  type: 'linear',\n  x: 0,\n  y: 0,\n  x2: 1,\n  y2: 0,\n  colorStops: [{\n    offset: 0,\n    color: c1\n  }, {\n    offset: 1,\n    color: c2\n  }]\n});\nexport default {\n  name: 'GreenhouseDetail',\n  components: {\n    VChart\n  },\n  data() {\n    return {\n      greenhouse: {},\n      temperatureChart: {},\n      humidityChart: {},\n      soilChart: {},\n      lightChart: {}\n    };\n  },\n  created() {\n    const id = this.$route.query.id;\n    this.loadGreenhouse(id);\n    this.loadEnvData(id);\n  },\n  methods: {\n    /* 视频加载失败 */\n    handleVideoError() {\n      this.$message.error('视频加载失败，请检查链接是否正确');\n    },\n    /* 读取单个大棚 */\n    loadGreenhouse(id) {\n      this.$request.get(`/api/greenhouse/getById?id=${id}`).then(res => {\n        this.greenhouse = res.data || {};\n        if (this.greenhouse.videoUrl && !this.greenhouse.videoUrl.startsWith('http')) {\n          this.greenhouse.videoUrl = this.$baseUrl + this.greenhouse.videoUrl;\n        }\n      });\n    },\n    /* 读取历史环境数据 */\n    loadEnvData(id) {\n      this.$request.get(`/api/environment/history/${id}`).then(res => {\n        const rec = res.data || [];\n        const dates = rec.map(r => r.recordDate);\n\n        /* 工具：计算 yAxis 上下限与 interval */\n        const buildYAxis = arr => {\n          const max = Math.max(...arr);\n          const min = Math.min(...arr);\n          const gap = (max - min) * 0.1 || 1;\n          return {\n            type: 'value',\n            min: min - gap,\n            max: max + gap,\n            interval: ((max - min) / 4).toFixed(2)\n          };\n        };\n\n        /* 通用配置 */\n        const base = (arr, name, grad) => ({\n          legend: {\n            data: [name]\n          },\n          tooltip: {\n            trigger: 'axis',\n            formatter: params => {\n              const p = params[0];\n              const unit = name.includes('湿度') ? '%' : name === '光照强度' ? 'lx' : '℃';\n              return `${p.axisValue}<br/>${p.seriesName}：${p.data}${unit}`;\n            }\n          },\n          toolbox: {\n            feature: {\n              saveAsImage: {}\n            }\n          },\n          dataZoom: [{\n            type: 'inside'\n          }, {\n            type: 'slider',\n            height: 15\n          }],\n          xAxis: {\n            type: 'category',\n            data: dates,\n            axisLabel: {\n              formatter: formatDateLabel\n            }\n          },\n          yAxis: buildYAxis(arr),\n          series: [{\n            name,\n            data: arr,\n            type: 'line',\n            smooth: true,\n            lineStyle: {\n              width: 2,\n              color: grad\n            },\n            itemStyle: {\n              color: grad\n            }\n          }]\n        });\n        this.temperatureChart = base(rec.map(r => r.temperature), '温度', genGradient('#FF7F50', '#FF4500'));\n        this.humidityChart = base(rec.map(r => r.humidity), '湿度', genGradient('#1E90FF', '#00BFFF'));\n        this.soilChart = base(rec.map(r => r.soilMoisture), '土壤湿度', genGradient('#3CB371', '#2E8B57'));\n        this.lightChart = base(rec.map(r => r.lightIntensity), '光照强度', genGradient('#FFA500', '#FF8C00'));\n      });\n    }\n  }\n};","map":{"version":3,"names":["VChart","echarts","LineChart","TitleComponent","TooltipComponent","GridComponent","LegendComponent","DataZoomComponent","ToolboxComponent","CanvasRenderer","use","formatDateLabel","val","d","Date","m","getMonth","day","getDate","hh","String","getHours","padStart","mm","getMinutes","genGradient","c1","c2","type","x","y","x2","y2","colorStops","offset","color","name","components","data","greenhouse","temperatureChart","humidityChart","soilChart","lightChart","created","id","$route","query","loadGreenhouse","loadEnvData","methods","handleVideoError","$message","error","$request","get","then","res","videoUrl","startsWith","$baseUrl","rec","dates","map","r","recordDate","buildYAxis","arr","max","Math","min","gap","interval","toFixed","base","grad","legend","tooltip","trigger","formatter","params","p","unit","includes","axisValue","seriesName","toolbox","feature","saveAsImage","dataZoom","height","xAxis","axisLabel","yAxis","series","smooth","lineStyle","width","itemStyle","temperature","humidity","soilMoisture","lightIntensity"],"sources":["src/views/manager/GreenhouseDetail.vue"],"sourcesContent":["<template>\r\n  <div className=\"detail-page\">\r\n    <!-- 监控视频 -->\r\n    <div className=\"video-container\" v-if=\"greenhouse.videoUrl\">\r\n      <video\r\n          :src=\"greenhouse.videoUrl\"\r\n          controls\r\n          class=\"video-player\"\r\n          @error=\"handleVideoError\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 图表区 -->\r\n    <div className=\"charts\">\r\n      <!-- 温度 & 湿度 -->\r\n      <div className=\"chart-row\">\r\n        <div className=\"chart-card\">\r\n          <h3>温度变化（℃）</h3>\r\n          <v-chart :option=\"temperatureChart\" class=\"chart\" autoresize/>\r\n        </div>\r\n        <div className=\"chart-card\">\r\n          <h3>湿度变化（%）</h3>\r\n          <v-chart :option=\"humidityChart\" class=\"chart\" autoresize/>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 土壤湿度 & 光照强度 -->\r\n      <div className=\"chart-row\">\r\n        <div className=\"chart-card\">\r\n          <h3>土壤湿度（%）</h3>\r\n          <v-chart :option=\"soilChart\" class=\"chart\" autoresize/>\r\n        </div>\r\n        <div className=\"chart-card\">\r\n          <h3>光照强度（lx）</h3>\r\n          <v-chart :option=\"lightChart\" class=\"chart\" autoresize/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VChart from 'vue-echarts'\r\nimport * as echarts from 'echarts/core'\r\nimport {LineChart} from 'echarts/charts'\r\nimport {\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  LegendComponent,\r\n  DataZoomComponent,\r\n  ToolboxComponent\r\n} from 'echarts/components'\r\nimport {CanvasRenderer} from 'echarts/renderers'\r\n\r\necharts.use([\r\n  LineChart,\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  LegendComponent,\r\n  DataZoomComponent,\r\n  ToolboxComponent,\r\n  CanvasRenderer\r\n])\r\n\r\n/* X 轴时间格式 */\r\nconst formatDateLabel = val => {\r\n  const d = new Date(val)\r\n  const m = d.getMonth() + 1\r\n  const day = d.getDate()\r\n  const hh = String(d.getHours()).padStart(2, '0')\r\n  const mm = String(d.getMinutes()).padStart(2, '0')\r\n  return `${m}-${day} ${hh}:${mm}`\r\n}\r\n\r\n/* 生成渐变色 */\r\nconst genGradient = (c1, c2) => ({\r\n  type: 'linear',\r\n  x: 0, y: 0, x2: 1, y2: 0,\r\n  colorStops: [\r\n    {offset: 0, color: c1},\r\n    {offset: 1, color: c2}\r\n  ]\r\n})\r\n\r\nexport default {\r\n  name: 'GreenhouseDetail',\r\n  components: {VChart},\r\n  data() {\r\n    return {\r\n      greenhouse: {},\r\n      temperatureChart: {},\r\n      humidityChart: {},\r\n      soilChart: {},\r\n      lightChart: {}\r\n    }\r\n  },\r\n  created() {\r\n    const id = this.$route.query.id\r\n    this.loadGreenhouse(id)\r\n    this.loadEnvData(id)\r\n  },\r\n  methods: {\r\n    /* 视频加载失败 */\r\n    handleVideoError() {\r\n      this.$message.error('视频加载失败，请检查链接是否正确')\r\n    },\r\n    /* 读取单个大棚 */\r\n    loadGreenhouse(id) {\r\n      this.$request.get(`/api/greenhouse/getById?id=${id}`).then(res => {\r\n        this.greenhouse = res.data || {}\r\n        if (this.greenhouse.videoUrl && !this.greenhouse.videoUrl.startsWith('http')) {\r\n          this.greenhouse.videoUrl = this.$baseUrl + this.greenhouse.videoUrl\r\n        }\r\n      })\r\n    },\r\n    /* 读取历史环境数据 */\r\n    loadEnvData(id) {\r\n      this.$request.get(`/api/environment/history/${id}`).then(res => {\r\n        const rec = res.data || []\r\n        const dates = rec.map(r => r.recordDate)\r\n\r\n        /* 工具：计算 yAxis 上下限与 interval */\r\n        const buildYAxis = arr => {\r\n          const max = Math.max(...arr)\r\n          const min = Math.min(...arr)\r\n          const gap = (max - min) * 0.1 || 1\r\n          return {\r\n            type: 'value',\r\n            min: min - gap,\r\n            max: max + gap,\r\n            interval: ((max - min) / 4).toFixed(2)\r\n          }\r\n        }\r\n\r\n        /* 通用配置 */\r\n        const base = (arr, name, grad) => ({\r\n          legend: {data: [name]},\r\n          tooltip: {\r\n            trigger: 'axis',\r\n            formatter: params => {\r\n              const p = params[0]\r\n              const unit = name.includes('湿度') ? '%' : (name === '光照强度' ? 'lx' : '℃')\r\n              return `${p.axisValue}<br/>${p.seriesName}：${p.data}${unit}`\r\n            }\r\n          },\r\n          toolbox: {\r\n            feature: {saveAsImage: {}}\r\n          },\r\n          dataZoom: [\r\n            {type: 'inside'},\r\n            {type: 'slider', height: 15}\r\n          ],\r\n          xAxis: {\r\n            type: 'category',\r\n            data: dates,\r\n            axisLabel: {formatter: formatDateLabel}\r\n          },\r\n          yAxis: buildYAxis(arr),\r\n          series: [{\r\n            name,\r\n            data: arr,\r\n            type: 'line',\r\n            smooth: true,\r\n            lineStyle: {width: 2, color: grad},\r\n            itemStyle: {color: grad}\r\n          }]\r\n        })\r\n\r\n        this.temperatureChart = base(\r\n            rec.map(r => r.temperature),\r\n            '温度',\r\n            genGradient('#FF7F50', '#FF4500')\r\n        )\r\n\r\n        this.humidityChart = base(\r\n            rec.map(r => r.humidity),\r\n            '湿度',\r\n            genGradient('#1E90FF', '#00BFFF')\r\n        )\r\n\r\n        this.soilChart = base(\r\n            rec.map(r => r.soilMoisture),\r\n            '土壤湿度',\r\n            genGradient('#3CB371', '#2E8B57')\r\n        )\r\n\r\n        this.lightChart = base(\r\n            rec.map(r => r.lightIntensity),\r\n            '光照强度',\r\n            genGradient('#FFA500', '#FF8C00')\r\n        )\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.detail-page {\r\n  padding: 20px;\r\n}\r\n\r\n/* 视频 */\r\n.video-container {\r\n  width: 100%;\r\n  height: 400px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.video-player {\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* 图表布局 */\r\n.charts {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 30px;\r\n}\r\n\r\n.chart-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  gap: 30px;\r\n}\r\n\r\n.chart-card {\r\n  flex: 1;\r\n  min-width: 48%;\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.chart {\r\n  width: 100%;\r\n  height: 300px;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}