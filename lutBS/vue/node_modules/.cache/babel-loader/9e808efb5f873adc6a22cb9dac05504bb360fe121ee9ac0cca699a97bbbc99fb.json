{"ast":null,"code":"import VChart from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport { LineChart } from 'echarts/charts';\nimport { TitleComponent, TooltipComponent, GridComponent, DatasetComponent, LegendComponent, DataZoomComponent,\n// ★ 数据缩放\nToolboxComponent // ★ 下载导出\n} from 'echarts/components';\nimport { CanvasRenderer } from 'echarts/renderers';\necharts.use([LineChart, TitleComponent, TooltipComponent, GridComponent, DatasetComponent, LegendComponent, DataZoomComponent,\n// ★\nToolboxComponent,\n// ★\nCanvasRenderer]);\n\n// X 轴时间格式化\nfunction formatDateLabel(value) {\n  const date = new Date(value);\n  const month = date.getMonth() + 1; // 去掉年份 & 前导 0\n  const day = date.getDate();\n  const h = date.getHours().toString().padStart(2, '0');\n  const m = date.getMinutes().toString().padStart(2, '0');\n  return `${month}-${day} ${h}:${m}`;\n}\n\n// 生成基础 Y 轴配置（含单位与区间设置）\nfunction buildYAxis(unit) {\n  return {\n    type: 'value',\n    name: unit,\n    // ★ 轴标题显示单位\n    axisLabel: {\n      formatter: `{value} ${unit}`\n    },\n    max: value => value.max * 1.1,\n    // ★ 留 10% 头部空间\n    minInterval: 1 // ★ 自动最小刻度为 1\n  };\n}\n\n// 柱线渐变色生成器（简易自适应）\nfunction gradient(col) {\n  return {\n    type: 'linear',\n    x: 0,\n    y: 0,\n    x2: 0,\n    y2: 1,\n    colorStops: [{\n      offset: 0,\n      color: col\n    }, {\n      offset: 1,\n      color: `${col}22`\n    } // 透明度\n    ]\n  };\n}\n\nexport default {\n  name: 'GreenhouseDetail',\n  components: {\n    VChart\n  },\n  data() {\n    return {\n      greenhouse: {},\n      temperatureChart: {},\n      humidityChart: {},\n      soilChart: {},\n      lightChart: {}\n    };\n  },\n  created() {\n    const id = this.$route.query.id;\n    this.loadGreenhouse(id);\n    this.loadEnvData(id);\n  },\n  methods: {\n    handleVideoError() {\n      this.$message.error('视频加载失败，请检查链接是否正确');\n    },\n    loadGreenhouse(id) {\n      this.$request.get(`/api/greenhouse/getById?id=${id}`).then(res => {\n        this.greenhouse = res.data || {};\n        if (this.greenhouse.videoUrl && !this.greenhouse.videoUrl.startsWith('http')) {\n          this.greenhouse.videoUrl = this.$baseUrl + this.greenhouse.videoUrl;\n        }\n      });\n    },\n    loadEnvData(id) {\n      this.$request.get(`/api/environment/history/${id}`).then(res => {\n        const rows = res.data || [];\n        const dates = rows.map(r => r.recordDate);\n        const xAxis = {\n          type: 'category',\n          data: dates,\n          axisLabel: {\n            formatter: formatDateLabel\n          }\n        };\n        const zoom = {\n          // ★ 同一配置即可复用\n          dataZoom: [{\n            type: 'inside',\n            xAxisIndex: 0\n          }, {\n            type: 'slider',\n            xAxisIndex: 0\n          }],\n          toolbox: {\n            // ★ 右上角工具栏\n            feature: {\n              saveAsImage: {}\n            }\n          }\n        };\n\n        // 温度\n        this.temperatureChart = {\n          color: [gradient('#ff7f50')],\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis,\n          yAxis: buildYAxis('℃'),\n          series: [{\n            name: '温度',\n            type: 'line',\n            smooth: true,\n            data: rows.map(r => r.temperature)\n          }],\n          ...zoom\n        };\n\n        // 湿度\n        this.humidityChart = {\n          color: [gradient('#1e90ff')],\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis,\n          yAxis: buildYAxis('%'),\n          series: [{\n            name: '湿度',\n            type: 'line',\n            smooth: true,\n            data: rows.map(r => r.humidity)\n          }],\n          ...zoom\n        };\n\n        // 土壤湿度\n        this.soilChart = {\n          color: [gradient('#3cb371')],\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis,\n          yAxis: buildYAxis('%'),\n          series: [{\n            name: '土壤湿度',\n            type: 'line',\n            smooth: true,\n            data: rows.map(r => r.soilMoisture)\n          }],\n          ...zoom\n        };\n\n        // 光照强度\n        this.lightChart = {\n          color: [gradient('#ffa500')],\n          tooltip: {\n            trigger: 'axis'\n          },\n          xAxis,\n          yAxis: buildYAxis('lx'),\n          series: [{\n            name: '光照强度',\n            type: 'line',\n            smooth: true,\n            data: rows.map(r => r.lightIntensity)\n          }],\n          ...zoom\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["VChart","echarts","LineChart","TitleComponent","TooltipComponent","GridComponent","DatasetComponent","LegendComponent","DataZoomComponent","ToolboxComponent","CanvasRenderer","use","formatDateLabel","value","date","Date","month","getMonth","day","getDate","h","getHours","toString","padStart","m","getMinutes","buildYAxis","unit","type","name","axisLabel","formatter","max","minInterval","gradient","col","x","y","x2","y2","colorStops","offset","color","components","data","greenhouse","temperatureChart","humidityChart","soilChart","lightChart","created","id","$route","query","loadGreenhouse","loadEnvData","methods","handleVideoError","$message","error","$request","get","then","res","videoUrl","startsWith","$baseUrl","rows","dates","map","r","recordDate","xAxis","zoom","dataZoom","xAxisIndex","toolbox","feature","saveAsImage","tooltip","trigger","yAxis","series","smooth","temperature","humidity","soilMoisture","lightIntensity"],"sources":["src/views/manager/GreenhouseDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"detail-page\">\r\n    <!-- 视频监控 -->\r\n    <div class=\"video-container\" v-if=\"greenhouse.videoUrl\">\r\n      <video\r\n          :src=\"greenhouse.videoUrl\"\r\n          controls\r\n          class=\"video-player\"\r\n          @error=\"handleVideoError\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 图表区 -->\r\n    <div class=\"charts\">\r\n      <!-- 第一行：温度 + 湿度 -->\r\n      <div class=\"chart-row\">\r\n        <div class=\"chart-card\">\r\n          <h3>温度变化（℃）</h3>\r\n          <v-chart :option=\"temperatureChart\" class=\"chart\" />\r\n        </div>\r\n        <div class=\"chart-card\">\r\n          <h3>湿度变化（%）</h3>\r\n          <v-chart :option=\"humidityChart\" class=\"chart\" />\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 第二行：土壤湿度 + 光照强度 -->\r\n      <div class=\"chart-row\">\r\n        <div class=\"chart-card\">\r\n          <h3>土壤湿度（%）</h3>\r\n          <v-chart :option=\"soilChart\" class=\"chart\" />\r\n        </div>\r\n        <div class=\"chart-card\">\r\n          <h3>光照强度（lx）</h3>\r\n          <v-chart :option=\"lightChart\" class=\"chart\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport VChart from 'vue-echarts'\r\nimport * as echarts from 'echarts/core'\r\nimport { LineChart } from 'echarts/charts'\r\nimport {\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  DatasetComponent,\r\n  LegendComponent,\r\n  DataZoomComponent,   // ★ 数据缩放\r\n  ToolboxComponent     // ★ 下载导出\r\n} from 'echarts/components'\r\nimport { CanvasRenderer } from 'echarts/renderers'\r\n\r\necharts.use([\r\n  LineChart,\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  DatasetComponent,\r\n  LegendComponent,\r\n  DataZoomComponent,   // ★\r\n  ToolboxComponent,    // ★\r\n  CanvasRenderer\r\n])\r\n\r\n// X 轴时间格式化\r\nfunction formatDateLabel(value) {\r\n  const date = new Date(value)\r\n  const month = date.getMonth() + 1      // 去掉年份 & 前导 0\r\n  const day   = date.getDate()\r\n  const h     = date.getHours().toString().padStart(2, '0')\r\n  const m     = date.getMinutes().toString().padStart(2, '0')\r\n  return `${month}-${day} ${h}:${m}`\r\n}\r\n\r\n// 生成基础 Y 轴配置（含单位与区间设置）\r\nfunction buildYAxis(unit) {\r\n  return {\r\n    type: 'value',\r\n    name: unit,                    // ★ 轴标题显示单位\r\n    axisLabel: { formatter: `{value} ${unit}` },\r\n    max: value => value.max * 1.1, // ★ 留 10% 头部空间\r\n    minInterval: 1                 // ★ 自动最小刻度为 1\r\n  }\r\n}\r\n\r\n// 柱线渐变色生成器（简易自适应）\r\nfunction gradient(col) {\r\n  return {\r\n    type: 'linear',\r\n    x: 0, y: 0, x2: 0, y2: 1,\r\n    colorStops: [\r\n      { offset: 0,   color: col },\r\n      { offset: 1,   color: `${col}22` } // 透明度\r\n    ]\r\n  }\r\n}\r\n\r\nexport default {\r\n  name: 'GreenhouseDetail',\r\n  components: { VChart },\r\n  data() {\r\n    return {\r\n      greenhouse: {},\r\n      temperatureChart: {},\r\n      humidityChart: {},\r\n      soilChart: {},\r\n      lightChart: {}\r\n    }\r\n  },\r\n  created() {\r\n    const id = this.$route.query.id\r\n    this.loadGreenhouse(id)\r\n    this.loadEnvData(id)\r\n  },\r\n  methods: {\r\n    handleVideoError() {\r\n      this.$message.error('视频加载失败，请检查链接是否正确')\r\n    },\r\n    loadGreenhouse(id) {\r\n      this.$request.get(`/api/greenhouse/getById?id=${id}`).then(res => {\r\n        this.greenhouse = res.data || {}\r\n        if (this.greenhouse.videoUrl && !this.greenhouse.videoUrl.startsWith('http')) {\r\n          this.greenhouse.videoUrl = this.$baseUrl + this.greenhouse.videoUrl\r\n        }\r\n      })\r\n    },\r\n    loadEnvData(id) {\r\n      this.$request.get(`/api/environment/history/${id}`).then(res => {\r\n        const rows  = res.data || []\r\n        const dates = rows.map(r => r.recordDate)\r\n\r\n        const xAxis = {\r\n          type: 'category',\r\n          data: dates,\r\n          axisLabel: { formatter: formatDateLabel }\r\n        }\r\n\r\n        const zoom = {               // ★ 同一配置即可复用\r\n          dataZoom: [\r\n            { type: 'inside', xAxisIndex: 0 },\r\n            { type: 'slider', xAxisIndex: 0 }\r\n          ],\r\n          toolbox: {                 // ★ 右上角工具栏\r\n            feature: { saveAsImage: {} }\r\n          }\r\n        }\r\n\r\n        // 温度\r\n        this.temperatureChart = {\r\n          color: [gradient('#ff7f50')], tooltip: { trigger: 'axis' },\r\n          xAxis, yAxis: buildYAxis('℃'),\r\n          series: [{ name: '温度', type: 'line', smooth: true,\r\n            data: rows.map(r => r.temperature) }],\r\n          ...zoom\r\n        }\r\n\r\n        // 湿度\r\n        this.humidityChart = {\r\n          color: [gradient('#1e90ff')], tooltip: { trigger: 'axis' },\r\n          xAxis, yAxis: buildYAxis('%'),\r\n          series: [{ name: '湿度', type: 'line', smooth: true,\r\n            data: rows.map(r => r.humidity) }],\r\n          ...zoom\r\n        }\r\n\r\n        // 土壤湿度\r\n        this.soilChart = {\r\n          color: [gradient('#3cb371')], tooltip: { trigger: 'axis' },\r\n          xAxis, yAxis: buildYAxis('%'),\r\n          series: [{ name: '土壤湿度', type: 'line', smooth: true,\r\n            data: rows.map(r => r.soilMoisture) }],\r\n          ...zoom\r\n        }\r\n\r\n        // 光照强度\r\n        this.lightChart = {\r\n          color: [gradient('#ffa500')], tooltip: { trigger: 'axis' },\r\n          xAxis, yAxis: buildYAxis('lx'),\r\n          series: [{ name: '光照强度', type: 'line', smooth: true,\r\n            data: rows.map(r => r.lightIntensity) }],\r\n          ...zoom\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.detail-page { padding: 20px; }\r\n.video-container { width: 100%; height: 400px; margin-bottom: 30px; }\r\n.video-player { width: 100%; height: 100%; border-radius: 8px; }\r\n\r\n.charts { display: flex; flex-direction: column; gap: 30px; }\r\n.chart-row { display: flex; flex-wrap: wrap; justify-content: space-between; gap: 30px; }\r\n\r\n.chart-card {\r\n  flex: 1;\r\n  min-width: 48%;\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,.08);\r\n}\r\n\r\n.chart { width: 100%; height: 300px; }\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}