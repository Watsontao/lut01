{"ast":null,"code":"export default {\n  name: 'TaskList',\n  data() {\n    return {\n      tasks: [],\n      searchKey: '',\n      multipleSelection: [],\n      /* 弹窗相关 */\n      dialogVisible: false,\n      greenhouses: [],\n      // 大棚缓存\n      farmers: [],\n      // 用户缓存\n      form: {},\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入任务名称',\n          trigger: 'blur'\n        }],\n        taskContent: [{\n          required: true,\n          message: '请输入任务内容',\n          trigger: 'blur'\n        }],\n        taskGreenhouseName: [{\n          required: true,\n          message: '请选择所属大棚',\n          trigger: 'change'\n        }],\n        assignedUserId: [{\n          required: true,\n          message: '请选择指派用户',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  computed: {\n    /* 关键字过滤 */\n    filteredTasks() {\n      const k = this.searchKey.trim();\n      if (!k) return this.tasks;\n      return this.tasks.filter(t => (t.name || '').includes(k) || (t.taskGreenhouseName || '').includes(k) || (t.assignedUserName || '').includes(k));\n    }\n  },\n  created() {\n    this.loadTasks();\n  },\n  methods: {\n    /* ——— 列表 —— */\n    loadTasks() {\n      this.$request.get('/api/task/getAll').then(res => {\n        this.tasks = res.data || [];\n      });\n    },\n    handleDelete(id) {\n      this.$confirm('确认删除该任务？', '提示', {\n        type: 'warning'\n      }).then(() => this.$request.delete(`/api/task/delete/${id}`)).then(() => {\n        this.$message.success('删除成功');\n        this.loadTasks();\n      });\n    },\n    handleBatchDelete() {\n      const ids = this.multipleSelection.map(i => i.taskId);\n      if (!ids.length) return;\n      this.$confirm(`确认删除选中的 ${ids.length} 条任务？`, '提示', {\n        type: 'warning'\n      }).then(() => this.$request.post('/api/task/deleteBatch', ids)).then(() => {\n        this.$message.success('删除成功');\n        this.loadTasks();\n      });\n    },\n    /* ——— 弹窗 —— */\n    openEdit(row = null) {\n      /* row 为 null 代表“新增”，否则为“编辑” */\n      this.form = row ? {\n        ...row\n      } : {\n        completed: '否'\n      };\n      this.dialogVisible = true;\n      this.$nextTick(() => this.$refs.formRef && this.$refs.formRef.clearValidate());\n\n      /* 只有新增时才去请求（且仅首次），编辑时复用已有缓存 */\n      if (!this.greenhouses.length) {\n        this.$request.get('/api/greenhouse/getAll').then(r => {\n          this.greenhouses = r.data || [];\n        });\n      }\n      if (!this.farmers.length) {\n        this.$request.get('/api/user/getFarmers').then(r => {\n          this.farmers = r.data || [];\n        });\n      }\n    },\n    submitForm() {\n      this.$refs.formRef.validate(valid => {\n        if (!valid) return;\n        this.$request.post('/api/task/save', this.form).then(() => {\n          this.$message.success('保存成功');\n          this.dialogVisible = false;\n          this.loadTasks();\n        });\n      });\n    },\n    resetForm() {\n      this.$refs.formRef && this.$refs.formRef.resetFields();\n      this.form = {};\n    }\n  }\n};","map":{"version":3,"names":["name","data","tasks","searchKey","multipleSelection","dialogVisible","greenhouses","farmers","form","rules","required","message","trigger","taskContent","taskGreenhouseName","assignedUserId","computed","filteredTasks","k","trim","filter","t","includes","assignedUserName","created","loadTasks","methods","$request","get","then","res","handleDelete","id","$confirm","type","delete","$message","success","handleBatchDelete","ids","map","i","taskId","length","post","openEdit","row","completed","$nextTick","$refs","formRef","clearValidate","r","submitForm","validate","valid","resetForm","resetFields"],"sources":["src/views/manager/TaskList.vue"],"sourcesContent":["<template>\n  <div class=\"task-page\">\n    <!-- ▍工具栏 -->\n    <div class=\"toolbar\">\n      <div>\n        <el-button type=\"success\" @click=\"openEdit()\">新增任务</el-button>\n        <el-button\n            type=\"danger\"\n            :disabled=\"!multipleSelection.length\"\n            @click=\"handleBatchDelete\"\n        >\n          批量删除\n        </el-button>\n      </div>\n\n      <!-- ▍搜索 -->\n      <el-input\n          v-model=\"searchKey\"\n          placeholder=\"搜索任务 / 大棚 / 用户\"\n          size=\"small\"\n          style=\"max-width:260px\"\n          clearable\n          @keyup.enter.native=\"loadTasks\"\n      >\n        <template #append>\n          <el-button icon=\"el-icon-search\" @click=\"loadTasks\" />\n        </template>\n      </el-input>\n    </div>\n\n    <!-- ▍任务表格 -->\n    <el-table\n        :data=\"filteredTasks\"\n        border\n        stripe\n        style=\"width:100%\"\n        @selection-change=\"multipleSelection = $event\"\n    >\n      <el-table-column type=\"selection\" width=\"46\" />\n      <el-table-column prop=\"taskId\" label=\"ID\" width=\"70\" align=\"center\" />\n      <el-table-column prop=\"name\" label=\"任务名称\" min-width=\"150\" />\n      <el-table-column\n          prop=\"taskContent\"\n          label=\"任务内容\"\n          min-width=\"180\"\n          show-overflow-tooltip\n      />\n      <el-table-column\n          prop=\"taskGreenhouseName\"\n          label=\"所属大棚\"\n          min-width=\"120\"\n      />\n\n      <!-- ★ 只显示用户名 -->\n      <el-table-column\n          prop=\"assignedUserName\"\n          label=\"指派用户\"\n          min-width=\"120\"\n      />\n\n      <el-table-column label=\"完成状态\" width=\"90\" align=\"center\">\n        <template #default=\"s\">\n          <el-tag\n              :type=\"s.row.completed === '是' ? 'success' : 'info'\"\n              size=\"mini\"\n          >\n            {{ s.row.completed === '是' ? '已完成' : '未完成' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column prop=\"publishTime\" label=\"发布时间\" min-width=\"140\" />\n      <el-table-column prop=\"deadline\" label=\"截止时间\" min-width=\"140\" />\n      <el-table-column\n          prop=\"taskDescription\"\n          label=\"备注\"\n          min-width=\"140\"\n          show-overflow-tooltip\n      />\n\n      <!-- ▍操作 -->\n      <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\n        <template #default=\"scope\">\n          <el-button size=\"mini\" type=\"primary\" @click=\"openEdit(scope.row)\"\n          >编辑</el-button\n          >\n          <el-button\n              size=\"mini\"\n              type=\"danger\"\n              @click=\"handleDelete(scope.row.taskId)\"\n          >删除</el-button\n          >\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- ▍弹窗：新增 / 编辑 -->\n    <el-dialog\n        :title=\"form.taskId ? '编辑任务' : '新增任务'\"\n        :visible.sync=\"dialogVisible\"\n        width=\"540px\"\n        @close=\"resetForm\"\n    >\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"95px\">\n        <el-form-item label=\"任务名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" />\n        </el-form-item>\n\n        <el-form-item label=\"任务内容\" prop=\"taskContent\">\n          <el-input\n              v-model=\"form.taskContent\"\n              type=\"textarea\"\n              :rows=\"3\"\n              maxlength=\"200\"\n              show-word-limit\n          />\n        </el-form-item>\n\n        <el-form-item label=\"所属大棚\" prop=\"taskGreenhouseName\">\n          <el-select\n              v-model=\"form.taskGreenhouseName\"\n              placeholder=\"请选择\"\n              filterable\n              clearable\n          >\n            <el-option\n                v-for=\"g in greenhouses\"\n                :key=\"g.greenhouseName\"\n                :label=\"g.greenhouseName\"\n                :value=\"g.greenhouseName\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <!-- 指派用户，仅显示用户名，value 仍为 userId -->\n        <el-form-item label=\"指派用户\" prop=\"assignedUserId\">\n          <el-select\n              v-model=\"form.assignedUserId\"\n              placeholder=\"请选择\"\n              filterable\n              clearable\n          >\n            <el-option\n                v-for=\"u in farmers\"\n                :key=\"u.userId\"\n                :label=\"u.userName\"\n                :value=\"u.userId\"\n            />\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"截止时间\" prop=\"deadline\">\n          <el-date-picker\n              v-model=\"form.deadline\"\n              type=\"datetime\"\n              placeholder=\"选择截止时间\"\n              style=\"width:100%\"\n          />\n        </el-form-item>\n\n        <el-form-item label=\"备注\">\n          <el-input\n              v-model=\"form.taskDescription\"\n              type=\"textarea\"\n              :rows=\"2\"\n              maxlength=\"120\"\n              show-word-limit\n          />\n        </el-form-item>\n      </el-form>\n\n      <template #footer>\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TaskList',\n  data() {\n    return {\n      tasks: [],\n      searchKey: '',\n      multipleSelection: [],\n\n      /* 弹窗相关 */\n      dialogVisible: false,\n      greenhouses: [], // 大棚缓存\n      farmers: [], // 用户缓存\n      form: {},\n\n      rules: {\n        name: [\n          { required: true, message: '请输入任务名称', trigger: 'blur' }\n        ],\n        taskContent: [\n          { required: true, message: '请输入任务内容', trigger: 'blur' }\n        ],\n        taskGreenhouseName: [\n          { required: true, message: '请选择所属大棚', trigger: 'change' }\n        ],\n        assignedUserId: [\n          { required: true, message: '请选择指派用户', trigger: 'change' }\n        ]\n      }\n    };\n  },\n\n  computed: {\n    /* 关键字过滤 */\n    filteredTasks() {\n      const k = this.searchKey.trim();\n      if (!k) return this.tasks;\n      return this.tasks.filter(\n          t =>\n              (t.name || '').includes(k) ||\n              (t.taskGreenhouseName || '').includes(k) ||\n              (t.assignedUserName || '').includes(k)\n      );\n    }\n  },\n\n  created() {\n    this.loadTasks();\n  },\n\n  methods: {\n    /* ——— 列表 —— */\n    loadTasks() {\n      this.$request.get('/api/task/getAll').then(res => {\n        this.tasks = res.data || [];\n      });\n    },\n\n    handleDelete(id) {\n      this.$confirm('确认删除该任务？', '提示', { type: 'warning' })\n          .then(() => this.$request.delete(`/api/task/delete/${id}`))\n          .then(() => {\n            this.$message.success('删除成功');\n            this.loadTasks();\n          });\n    },\n\n    handleBatchDelete() {\n      const ids = this.multipleSelection.map(i => i.taskId);\n      if (!ids.length) return;\n      this.$confirm(`确认删除选中的 ${ids.length} 条任务？`, '提示', {\n        type: 'warning'\n      })\n          .then(() => this.$request.post('/api/task/deleteBatch', ids))\n          .then(() => {\n            this.$message.success('删除成功');\n            this.loadTasks();\n          });\n    },\n\n    /* ——— 弹窗 —— */\n    openEdit(row = null) {\n      /* row 为 null 代表“新增”，否则为“编辑” */\n      this.form = row ? { ...row } : { completed: '否' };\n      this.dialogVisible = true;\n      this.$nextTick(() => this.$refs.formRef && this.$refs.formRef.clearValidate());\n\n      /* 只有新增时才去请求（且仅首次），编辑时复用已有缓存 */\n      if (!this.greenhouses.length) {\n        this.$request.get('/api/greenhouse/getAll').then(r => {\n          this.greenhouses = r.data || [];\n        });\n      }\n      if (!this.farmers.length) {\n        this.$request.get('/api/user/getFarmers').then(r => {\n          this.farmers = r.data || [];\n        });\n      }\n    },\n\n    submitForm() {\n      this.$refs.formRef.validate(valid => {\n        if (!valid) return;\n        this.$request.post('/api/task/save', this.form).then(() => {\n          this.$message.success('保存成功');\n          this.dialogVisible = false;\n          this.loadTasks();\n        });\n      });\n    },\n\n    resetForm() {\n      this.$refs.formRef && this.$refs.formRef.resetFields();\n      this.form = {};\n    }\n  }\n};\n</script>\n\n<style scoped>\n.task-page {\n  padding: 15px;\n}\n.toolbar {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 12px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}