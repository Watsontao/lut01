{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      form: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    login() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          this.$request.post('/api/user/login', this.form).then(res => {\n            if (res.code === '200') {\n              // 分离存储用户和 token\n              localStorage.setItem(\"token\", res.data.token);\n              localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n\n              // 跳转页面：根据角色\n              const role = res.data.user.role;\n              if (role === 'ADMIN') {\n                this.$router.push('/home');\n              } else {\n                this.$router.push('/front/home');\n              }\n              this.$message.success('登录成功');\n            } else {\n              // ❗ 清除旧 token，防止无效 token 被继续发送\n              localStorage.removeItem(\"token\");\n              localStorage.removeItem(\"user\");\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","username","password","rules","required","message","trigger","methods","login","$refs","validate","valid","$request","post","then","res","code","localStorage","setItem","token","JSON","stringify","user","role","$router","push","$message","success","removeItem","error","msg"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div style=\"width: 400px; padding: 30px; background-color: white; border-radius: 5px;\">\r\n      <div style=\"text-align: center; font-size: 20px; margin-bottom: 20px; color: #333\">欢迎使用</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button style=\"width: 100%; background-color: #333; border-color: #333; color: white\" @click=\"login\">登 录</el-button>\r\n        </el-form-item>\r\n<!--        <div style=\"display: flex; align-items: center\">-->\r\n<!--          <div style=\"flex: 1\"></div>-->\r\n<!--          <div style=\"flex: 1; text-align: right\">-->\r\n<!--            还没有账号？请 <a href=\"/register\">注册</a>-->\r\n<!--          </div>-->\r\n<!--        </div>-->\r\n      </el-form>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      form: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        username: [{ required: true, message: '请输入账号', trigger: 'blur' }],\r\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    login() {\r\n      this.$refs['formRef'].validate(valid => {\r\n        if (valid) {\r\n          this.$request.post('/api/user/login', this.form).then(res => {\r\n            if (res.code === '200') {\r\n              // 分离存储用户和 token\r\n              localStorage.setItem(\"token\", res.data.token)\r\n              localStorage.setItem(\"user\", JSON.stringify(res.data.user))\r\n\r\n              // 跳转页面：根据角色\r\n              const role = res.data.user.role\r\n              if (role === 'ADMIN') {\r\n                this.$router.push('/home')\r\n              } else {\r\n                this.$router.push('/front/home')\r\n              }\r\n\r\n              this.$message.success('登录成功')\r\n            } else {\r\n              // ❗ 清除旧 token，防止无效 token 被继续发送\r\n              localStorage.removeItem(\"token\")\r\n              localStorage.removeItem(\"user\")\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(\"@/assets/imgs/ppp.jpg\");\r\n  background-size: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n}\r\na {\r\n  color: #2a60c9;\r\n}\r\n</style>"],"mappings":";AA2BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,QAAA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAJ,QAAA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,MAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA,CAAAC,IAAA,yBAAAb,IAAA,EAAAc,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA;cACAC,YAAA,CAAAC,OAAA,UAAAH,GAAA,CAAAhB,IAAA,CAAAoB,KAAA;cACAF,YAAA,CAAAC,OAAA,SAAAE,IAAA,CAAAC,SAAA,CAAAN,GAAA,CAAAhB,IAAA,CAAAuB,IAAA;;cAEA;cACA,MAAAC,IAAA,GAAAR,GAAA,CAAAhB,IAAA,CAAAuB,IAAA,CAAAC,IAAA;cACA,IAAAA,IAAA;gBACA,KAAAC,OAAA,CAAAC,IAAA;cACA;gBACA,KAAAD,OAAA,CAAAC,IAAA;cACA;cAEA,KAAAC,QAAA,CAAAC,OAAA;YACA;cACA;cACAV,YAAA,CAAAW,UAAA;cACAX,YAAA,CAAAW,UAAA;cACA,KAAAF,QAAA,CAAAG,KAAA,CAAAd,GAAA,CAAAe,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}