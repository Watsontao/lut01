{"ast":null,"code":"export default {\n  name: 'TaskList',\n  data() {\n    return {\n      tasks: [],\n      searchKey: '',\n      multipleSelection: [],\n      /* 弹窗表单 */\n      dialogVisible: false,\n      form: {},\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入任务名称',\n          trigger: 'blur'\n        }],\n        taskContent: [{\n          required: true,\n          message: '请输入任务内容',\n          trigger: 'blur'\n        }],\n        taskGreenhouseName: [{\n          required: true,\n          message: '请输入所属大棚',\n          trigger: 'blur'\n        }],\n        assignedUserId: [{\n          required: true,\n          message: '请输入用户 ID',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    filteredTasks() {\n      const k = this.searchKey.trim();\n      if (!k) return this.tasks;\n      return this.tasks.filter(t => t.name?.includes(k) || t.taskGreenhouseName?.includes(k) || String(t.assignedUserId).includes(k));\n    }\n  },\n  created() {\n    this.loadTasks();\n  },\n  methods: {\n    loadTasks() {\n      this.$request.get('/api/task/getAll').then(res => {\n        this.tasks = res.data || [];\n      });\n    },\n    saveTask() {\n      this.$request.post('/api/task/save', this.form).then(() => {\n        this.$message.success('保存成功');\n        this.dialogVisible = false;\n        this.loadTasks();\n      });\n    },\n    handleDelete(id) {\n      this.$confirm('确认删除该任务？', '提示', {\n        type: 'warning'\n      }).then(() => this.$request.delete(`/api/task/delete/${id}`)).then(() => {\n        this.$message.success('删除成功');\n        this.loadTasks();\n      });\n    },\n    handleBatchDelete() {\n      const ids = this.multipleSelection.map(i => i.taskId);\n      this.$confirm(`确认批量删除 ${ids.length} 条记录？`, '提示', {\n        type: 'warning'\n      }).then(() => this.$request.post('/api/task/deleteBatch', ids)).then(() => {\n        this.$message.success('批量删除成功');\n        this.loadTasks();\n      });\n    },\n    openEdit(row = {}) {\n      this.form = {\n        ...row\n      };\n      this.dialogVisible = true;\n    },\n    submitForm() {\n      this.$refs.formRef.validate(v => v && this.saveTask());\n    },\n    resetForm() {\n      this.$refs.formRef && this.$refs.formRef.resetFields();\n      this.form = {};\n    }\n  }\n};","map":{"version":3,"names":["name","data","tasks","searchKey","multipleSelection","dialogVisible","form","rules","required","message","trigger","taskContent","taskGreenhouseName","assignedUserId","computed","filteredTasks","k","trim","filter","t","includes","String","created","loadTasks","methods","$request","get","then","res","saveTask","post","$message","success","handleDelete","id","$confirm","type","delete","handleBatchDelete","ids","map","i","taskId","length","openEdit","row","submitForm","$refs","formRef","validate","v","resetForm","resetFields"],"sources":["src/views/manager/TaskList.vue"],"sourcesContent":["<template>\n  <div class=\"task-page\">\n    <!-- 顶部工具栏 -->\n    <div class=\"toolbar\">\n      <div>\n        <el-button type=\"success\" @click=\"openEdit()\">新增任务</el-button>\n        <el-button\n            type=\"danger\"\n            :disabled=\"!multipleSelection.length\"\n            @click=\"handleBatchDelete\"\n        >批量删除</el-button>\n      </div>\n\n      <!-- 搜索框 -->\n      <el-input\n          v-model=\"searchKey\"\n          placeholder=\"搜索任务 / 大棚 / 用户\"\n          size=\"small\"\n          style=\"max-width: 260px\"\n          clearable\n          @keyup.enter.native=\"loadTasks\"\n      >\n        <template #append>\n          <el-button icon=\"el-icon-search\" @click=\"loadTasks\" />\n        </template>\n      </el-input>\n    </div>\n\n    <!-- 任务表格 -->\n    <el-table\n        :data=\"filteredTasks\"\n        border\n        stripe\n        style=\"width: 100%;\"\n        @selection-change=\"multipleSelection = $event\"\n    >\n      <el-table-column type=\"selection\" width=\"45\" />\n      <el-table-column prop=\"taskId\"              label=\"ID\"           width=\"70\"  align=\"center\"/>\n      <el-table-column prop=\"name\"                label=\"任务名称\"     min-width=\"140\"/>\n      <el-table-column prop=\"taskContent\"         label=\"任务内容\"     min-width=\"180\" show-overflow-tooltip/>\n      <el-table-column prop=\"taskGreenhouseName\"  label=\"所属大棚\"     min-width=\"120\"/>\n      <el-table-column prop=\"assignedUserId\"      label=\"指派用户\"     width=\"90\"/>\n      <el-table-column label=\"完成状态\" width=\"90\" align=\"center\">\n        <template #default=\"s\">\n          <el-tag :type=\"s.row.completed === '是' ? 'success' : 'info'\" size=\"mini\">\n            {{ s.row.completed === '是' ? '已完成' : '未完成' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"publishTime\"   label=\"发布时间\"   min-width=\"120\"/>\n      <el-table-column prop=\"deadline\"      label=\"截止时间\"   min-width=\"120\"/>\n      <el-table-column prop=\"taskDescription\" label=\"备注\"     min-width=\"140\" show-overflow-tooltip/>\n\n      <!-- 操作列 -->\n      <el-table-column label=\"操作\" width=\"180\" fixed=\"right\">\n        <template #default=\"scope\">\n          <el-button size=\"mini\" type=\"primary\" @click=\"openEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\"  @click=\"handleDelete(scope.row.taskId)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 编辑 / 新增弹窗 -->\n    <el-dialog\n        :title=\"form.taskId ? '编辑任务' : '新增任务'\"\n        :visible.sync=\"dialogVisible\"\n        width=\"540px\"\n        @close=\"resetForm\"\n    >\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"95px\">\n        <el-form-item label=\"任务名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" />\n        </el-form-item>\n        <el-form-item label=\"任务内容\" prop=\"taskContent\">\n          <el-input v-model=\"form.taskContent\" type=\"textarea\" :rows=\"3\" maxlength=\"200\" show-word-limit/>\n        </el-form-item>\n        <el-form-item label=\"所属大棚\" prop=\"taskGreenhouseName\">\n          <el-input v-model=\"form.taskGreenhouseName\"/>\n        </el-form-item>\n        <el-form-item label=\"指派用户\" prop=\"assignedUserId\">\n          <el-select v-model=\"form.assignedUserId\" placeholder=\"请选择用户\" filterable clearable>\n            <el-option v-for=\"u in farmers\"\n                       :key=\"u.userId\"\n                       :label=\"u.username + '（ID:' + u.userId + '）'\"\n                       :value=\"u.userId\"/>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"截止时间\" prop=\"deadline\">\n          <el-date-picker v-model=\"form.deadline\" type=\"datetime\" placeholder=\"选择截止时间\" style=\"width:100%\"/>\n        </el-form-item>\n        <el-form-item label=\"备注\">\n          <el-input v-model=\"form.taskDescription\" type=\"textarea\" :rows=\"2\" maxlength=\"120\" show-word-limit/>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TaskList',\n  data () {\n    return {\n      tasks: [],\n      searchKey: '',\n      multipleSelection: [],\n\n      /* 弹窗表单 */\n      dialogVisible: false,\n      form: {},\n      rules: {\n        name:                [{ required: true, message: '请输入任务名称', trigger: 'blur' }],\n        taskContent:         [{ required: true, message: '请输入任务内容', trigger: 'blur' }],\n        taskGreenhouseName:  [{ required: true, message: '请输入所属大棚', trigger: 'blur' }],\n        assignedUserId:      [{ required: true, message: '请输入用户 ID', trigger: 'blur' }]\n      }\n    }\n  },\n  computed: {\n    filteredTasks () {\n      const k = this.searchKey.trim()\n      if (!k) return this.tasks\n      return this.tasks.filter(t =>\n          t.name?.includes(k) ||\n          t.taskGreenhouseName?.includes(k) ||\n          String(t.assignedUserId).includes(k)\n      )\n    }\n  },\n  created () { this.loadTasks() },\n  methods: {\n    loadTasks () { this.$request.get('/api/task/getAll').then(res => { this.tasks = res.data || [] }) },\n    saveTask () {\n      this.$request.post('/api/task/save', this.form).then(() => {\n        this.$message.success('保存成功'); this.dialogVisible = false; this.loadTasks()\n      })\n    },\n    handleDelete (id) {\n      this.$confirm('确认删除该任务？', '提示', { type:'warning' })\n          .then(() => this.$request.delete(`/api/task/delete/${id}`))\n          .then(() => { this.$message.success('删除成功'); this.loadTasks() })\n    },\n    handleBatchDelete () {\n      const ids = this.multipleSelection.map(i => i.taskId)\n      this.$confirm(`确认批量删除 ${ids.length} 条记录？`, '提示', { type:'warning' })\n          .then(() => this.$request.post('/api/task/deleteBatch', ids))\n          .then(() => { this.$message.success('批量删除成功'); this.loadTasks() })\n    },\n    openEdit (row = {}) { this.form = { ...row }; this.dialogVisible = true },\n    submitForm () { this.$refs.formRef.validate(v => v && this.saveTask()) },\n    resetForm ()  { this.$refs.formRef && this.$refs.formRef.resetFields(); this.form = {} }\n  }\n}\n</script>\n\n<style scoped>\n.task-page { padding: 15px }\n.toolbar   { display: flex; justify-content: space-between; margin-bottom: 12px }\n</style>\n"],"mappings":"AAuGA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,SAAA;MACAC,iBAAA;MAEA;MACAC,aAAA;MACAC,IAAA;MACAC,KAAA;QACAP,IAAA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,WAAA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAE,kBAAA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAG,cAAA;UAAAL,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;IACA;EACA;EACAI,QAAA;IACAC,cAAA;MACA,MAAAC,CAAA,QAAAb,SAAA,CAAAc,IAAA;MACA,KAAAD,CAAA,cAAAd,KAAA;MACA,YAAAA,KAAA,CAAAgB,MAAA,CAAAC,CAAA,IACAA,CAAA,CAAAnB,IAAA,EAAAoB,QAAA,CAAAJ,CAAA,KACAG,CAAA,CAAAP,kBAAA,EAAAQ,QAAA,CAAAJ,CAAA,KACAK,MAAA,CAAAF,CAAA,CAAAN,cAAA,EAAAO,QAAA,CAAAJ,CAAA,CACA;IACA;EACA;EACAM,QAAA;IAAA,KAAAC,SAAA;EAAA;EACAC,OAAA;IACAD,UAAA;MAAA,KAAAE,QAAA,CAAAC,GAAA,qBAAAC,IAAA,CAAAC,GAAA;QAAA,KAAA1B,KAAA,GAAA0B,GAAA,CAAA3B,IAAA;MAAA;IAAA;IACA4B,SAAA;MACA,KAAAJ,QAAA,CAAAK,IAAA,wBAAAxB,IAAA,EAAAqB,IAAA;QACA,KAAAI,QAAA,CAAAC,OAAA;QAAA,KAAA3B,aAAA;QAAA,KAAAkB,SAAA;MACA;IACA;IACAU,aAAAC,EAAA;MACA,KAAAC,QAAA;QAAAC,IAAA;MAAA,GACAT,IAAA,YAAAF,QAAA,CAAAY,MAAA,qBAAAH,EAAA,KACAP,IAAA;QAAA,KAAAI,QAAA,CAAAC,OAAA;QAAA,KAAAT,SAAA;MAAA;IACA;IACAe,kBAAA;MACA,MAAAC,GAAA,QAAAnC,iBAAA,CAAAoC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,MAAA;MACA,KAAAP,QAAA,WAAAI,GAAA,CAAAI,MAAA;QAAAP,IAAA;MAAA,GACAT,IAAA,YAAAF,QAAA,CAAAK,IAAA,0BAAAS,GAAA,GACAZ,IAAA;QAAA,KAAAI,QAAA,CAAAC,OAAA;QAAA,KAAAT,SAAA;MAAA;IACA;IACAqB,SAAAC,GAAA;MAAA,KAAAvC,IAAA;QAAA,GAAAuC;MAAA;MAAA,KAAAxC,aAAA;IAAA;IACAyC,WAAA;MAAA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,CAAA,IAAAA,CAAA,SAAArB,QAAA;IAAA;IACAsB,UAAA;MAAA,KAAAJ,KAAA,CAAAC,OAAA,SAAAD,KAAA,CAAAC,OAAA,CAAAI,WAAA;MAAA,KAAA9C,IAAA;IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}